{"ast":null,"code":"var _jsxFileName = \"D:\\\\Shoaib dev\\\\Rolex\\\\frontend-rolex\\\\src\\\\Pages\\\\User\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./../../Components/Header\";\nimport Sidebar from \"./../../Components/Sidebar\";\nimport Footer from \"./../../Components/Sidebar\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport BtnSpinner from \"./../../Components/BtnSpinner\";\nimport Helpers from \"./../../Config/Helpers\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport { useGoogleLogin, GoogleOAuthProvider } from \"@react-oauth/google\";\nimport { useNavigate } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Template from \"./Template\";\nimport Send from \"./Send\";\nimport LocationSlider from \"../Admin/Components/LocationSlider\";\nimport Slider from \"react-slick\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  useEffect(() => {\n    document.title = \"Home - Crownsync AI\";\n    // Optionally, set meta description or any other head elements here\n    return () => {\n      // This is where you can reset or change the title when the component unmounts if necessary\n      document.title = \"Crownsync Ai\";\n    };\n  }, []);\n  const [inputs, setInputs] = useState({});\n  const [googleLoading, setGoogleLoading] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [mails, setMails] = useState([]);\n  const [isGoogle, setIsGoogle] = useState(null);\n  const [userNotFound, setUserNotFound] = useState(false);\n\n  // location silder\n  useEffect(() => {\n    const fetchDetail = async () => {\n      const url = Helpers.apiUrl;\n      const token = localStorage.getItem(\"token\");\n      try {\n        const response = await axios.get(`${url}check-login`, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.status === 200 && response.data.data) {\n          // console.log(\"my response:\", response.data.data.contact);\n          setIsGoogle(response.data.data);\n          setUserNotFound(false);\n        } else {\n          // If the data is empty or null which should ideally not occur in this branch\n          setIsGoogle(null);\n          setUserNotFound(true);\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          // Handle user not found\n          setUserNotFound(true);\n          setIsGoogle(null);\n        } else {\n          // Handle other errors\n          console.error(\"Error fetching details:\", error);\n        }\n      }\n    };\n    fetchDetail();\n  }, []);\n\n  // const [authorized, setAuthorized] = useState(false);\n  const baseUrl = Helpers.apiUrl;\n  const navigate = useNavigate();\n  const loginWithGoogle = useGoogleLogin({\n    scope: \"https://www.googleapis.com/auth/userinfo.email https://mail.google.com/\",\n    onSuccess: async tokenResponse => {\n      setIsLoading(true);\n      // setGoogleLoading(true);\n      try {\n        const token = localStorage.getItem(\"token\");\n        // console.log(\"Tokeeenene\", token);\n        // console.log(\"google\", tokenResponse.access_token);\n        let data = {\n          usertoken: tokenResponse.access_token,\n          token: token\n        };\n        // console.log(\"rfde\", data);\n        // let data = { usertoken : tokenResponse.access_token };\n        // let data = { usertoken : token };\n        // Adding await here to wait for the request to complete\n        const response = await axios.post(`${baseUrl}auth/google`, data, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.status === 200) {\n          // Helpers.setItem(\"user\", response.data.user, true);\n          // Helpers.setItem(\"token\", response.data.token);\n          // console.log(response.data.user);\n\n          // window.location.href = \"/user/dashboard\";\n          // navigate(\"/user/dashboard\");\n          window.location.reload();\n          setIsAuthenticated(true);\n        } else {\n          console.log(\"Received non-200 response:\", response.status);\n        }\n      } catch (error) {\n        setIsLoading(false);\n        setGoogleLoading(false);\n        if (error.response) {\n          console.error(\"Error data:\", error.response.data);\n          console.error(\"Error status:\", error.response.status);\n        } else if (error.request) {\n          console.error(\"No response received:\", error.request);\n        } else {\n          console.error(\"Error message:\", error.message);\n        }\n      }\n    },\n    onError: error => {\n      console.error(\"Login with Google error:\", error);\n      setIsLoading(false);\n      setGoogleLoading(false);\n    }\n  });\n  const fetchData = async () => {\n    setIsLoading(true);\n    try {\n      const baseUrl = Helpers.apiUrl;\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(`${baseUrl}email-messages`, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        const emails = response.data.data.map(email => {\n          try {\n            // Assuming email.detail is a JSON string that needs parsing\n            return {\n              ...email,\n              detail: JSON.parse(email.detail)\n            };\n          } catch (e) {\n            console.error(\"Failed to parse email detail for email with ID:\", email.id);\n            return {\n              ...email,\n              detail: {}\n            }; // Provide empty detail in case of parsing failure\n          }\n        });\n        setMails(emails);\n        setAssignSuccess(false);\n      } else {\n        console.log(\"Received non-200 response:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"An error occurred:\", error);\n      if (error.response && error.response.status === 401) {\n        setIsAuthenticated(false); // Assuming you meant to set false here\n      } else {\n        setIsAuthenticated(true); // You can decide the correct logic\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // useEffect to call fetchData on component mount\n  useEffect(() => {\n    fetchData();\n  }, []);\n  // const emails = JSON.parse(mails.detail);\n  // Empty dependency array means this effect runs once after the initial render\n  const userJson = localStorage.getItem(\"user\");\n\n  // Parse the JSON string to an object\n  const user = JSON.parse(userJson);\n\n  // Access the email property of the user object\n  const userEmail = user ? user.email : null;\n\n  // console.log(userEmail);\n\n  //\n\n  // const [isLoading, setIsLoading] = useState(false);\n\n  const [collection_id, setCollection] = useState(\"\");\n  // const [templateid, setCollection] = useState(\"\");\n  // const [templates, setTemplate] = useState(null);\n  const [emailData, setEmailData] = useState(null);\n  let {\n    messageId\n  } = useParams();\n  // console.log(messageId);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const baseUrl = Helpers.apiUrl;\n        const token = localStorage.getItem(\"token\");\n\n        // Fetch all email messages\n        const response = await axios.get(`${baseUrl}email-messages`, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.status === 200) {\n          const emails = response.data.data.map(email => {\n            try {\n              // Assuming email.detail is a JSON string that needs parsing\n              return {\n                ...email,\n                detail: JSON.parse(email.detail)\n              };\n            } catch (e) {\n              console.error(\"Failed to parse email detail for email with ID:\", email.id, e);\n              return {\n                ...email,\n                detail: {}\n              }; // Provide empty detail in case of parsing failure\n            }\n          });\n\n          // Filter the email messages locally based on messageId\n          const emailMessage = emails.find(email => email.detail.headers && email.detail.headers[\"Message-ID\"] === messageId);\n          if (emailMessage) {\n            setEmailData(emailMessage);\n            // console.log(\"Email data:\", emailMessage);\n          } else {\n            console.log(\"Email with messageId not found.\");\n          }\n        } else {\n          console.log(\"Received non-200 response:\", response.status);\n        }\n      } catch (error) {\n        console.error(\"An error occurred:\", error);\n        // Handle error\n        if (error.response) {\n          // Server responded with a status code outside 2xx range\n          console.error(\"Error data:\", error.response.data);\n          console.error(\"Error status:\", error.response.status);\n        } else if (error.request) {\n          // No response was received to the request\n          console.error(\"No response received:\", error.request);\n        } else {\n          // An error occurred in setting up the request\n          console.error(\"Error message:\", error.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [messageId]); // Fetch data whenever messageId changes\n  const [templates, setTemplates] = useState([]);\n  const [selectedTemplateId, setSelectedTemplateId] = useState(null);\n  const [finalTemplate, setFinalTemplate] = useState(\"\");\n  // const [isLoading, setIsLoading] = useState(false); // Ensure you have this state defined if you're using it\n\n  // Fetch templates from the API\n\n  const handleTemplateChange = event => {\n    setSelectedTemplateId(event.target.value);\n  };\n\n  // Correctly find the selected template using the updated selectedTemplateId state\n  const selectedTemplate = templates.find(template => String(template.id) === String(selectedTemplateId));\n  const [products, setProducts] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const baseUrl = Helpers.apiUrl;\n        const token = localStorage.getItem(\"token\");\n        // const data = {}; // Your request payload\n        // Retrieve token if needed\n        // console.log(\"token\", token);\n        const response = await axios.get(`${baseUrl}rolex_models`, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // console.log(\"response\", response.data.data);\n\n        if (response.status === 200) {\n          // console.log(response.data.user);\n          // Assuming you want to store the emails in state\n          // console.log(response.data);\n          setProducts(response.data.data);\n\n          // Redirect or perform further actions\n        } else {\n          console.log(\"Received non-200 response:\", response.status);\n        }\n      } catch (error) {\n        console.error(\"An error occurred:\", error);\n        // Handle error\n        if (error.response) {\n          // Server responded with a status code outside 2xx range\n          console.error(\"Error data:\", error.response.data);\n          console.error(\"Error status:\", error.response.status);\n        } else if (error.request) {\n          // No response was received to the request\n          console.error(\"No response received:\", error.request);\n        } else {\n          // An error occurred in setting up the request\n          console.error(\"Error message:\", error.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array means this effect runs once after the initial render\n\n  // const userJson = localStorage.getItem(\"user\");\n\n  // // Parse the JSON string to an object\n  // const user = JSON.parse(userJson);\n\n  // // Access the email property of the user object\n  // const userEmail = user ? user.name : null;\n\n  // console.log(userEmail);\n\n  //location\n\n  const [collections, setCollections] = useState([]);\n  const [allProducts, setAllProducts] = useState([]);\n  const [selectedCollectionId, setSelectedCollectionId] = useState(\"\");\n  const [selectedProductId, setSelectedProductId] = useState(\"\");\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  useEffect(() => {\n    const fetchCollections = async () => {\n      const baseUrl = Helpers.apiUrl; // Replace with your actual API URL\n      const token = localStorage.getItem(\"token\");\n      try {\n        const response = await axios.get(`${baseUrl}collects`, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.status === 200) {\n          setCollections(response.data.data);\n        } else {\n          console.error(\"Received non-200 response:\", response.status);\n        }\n      } catch (error) {\n        console.error(\"An error occurred:\", error);\n        handleAPIError(error);\n      }\n    };\n    const fetchProducts = async () => {\n      const baseUrl = Helpers.apiUrl; // Replace with your actual API URL\n      const token = localStorage.getItem(\"token\");\n      try {\n        const response = await axios.get(`${baseUrl}rolex_models`, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.status === 200) {\n          setAllProducts(response.data.data);\n        } else {\n          console.error(\"Received non-200 response:\", response.status);\n        }\n      } catch (error) {\n        console.error(\"An error occurred:\", error);\n        handleAPIError(error);\n      }\n    };\n    fetchCollections();\n    fetchProducts();\n  }, []);\n  useEffect(() => {\n    if (selectedCollectionId) {\n      const filtered = allProducts.filter(product => String(product.collection_id) === String(selectedCollectionId));\n      setFilteredProducts(filtered);\n    } else {\n      setFilteredProducts([]);\n    }\n  }, [selectedCollectionId, allProducts]);\n  const handleSelectionChange = event => {\n    setSelectedCollectionId(event.target.value);\n    setSelectedProductId(\"\"); // Reset the product selection\n  };\n  const handleProductChange = event => {\n    setSelectedProductId(event.target.value);\n  };\n  const handleAPIError = error => {\n    if (error.response) {\n      console.error(\"Error data:\", error.response.data);\n      console.error(\"Error status:\", error.response.status);\n    } else if (error.request) {\n      console.error(\"No response received:\", error.request);\n    } else {\n      console.error(\"Error message:\", error.message);\n    }\n  };\n  useEffect(() => {\n    // console.log(\"Selected Collection ID:\", selectedCollectionId);\n    // console.log(\"All Products:\", allProducts);\n\n    const filtered = allProducts.filter(product => {\n      const productCollectionId = String(product.collection_id);\n      const isSelectedCollectionId = String(selectedCollectionId);\n      // console.log(\n      //   \"Comparing:\",\n      //   productCollectionId,\n      //   \"with\",\n      //   isSelectedCollectionId\n      // );\n      return productCollectionId === isSelectedCollectionId;\n    });\n\n    // console.log(\"Filtered Products:\", filtered);\n    setFilteredProducts(filtered);\n  }, [selectedCollectionId, allProducts]);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  useEffect(() => {\n    // console.log(\"Selected Product ID:\", selectedProductId);\n    // console.log(\"Filtered Products:\", filteredProducts);\n    const product = filteredProducts.find(p => String(p.id) === String(selectedProductId));\n    // console.log(\"Selected Product:\", product);\n    setSelectedProduct(product);\n  }, [selectedProductId, filteredProducts]);\n  const getTemplates = async () => {\n    const baseUrl = Helpers.apiUrl;\n    const token = localStorage.getItem(\"token\");\n    const response = await axios.get(`${baseUrl}admin/mail_templates`, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (response.status === 200) {\n      setTemplates(response.data.data);\n    }\n  };\n  const updateTemplate = () => {\n    if (selectedTemplateId) {\n      let templateToUpdate = templates.find(temp => temp.id == selectedTemplateId);\n      // console.log(templateToUpdate, selectedTemplateId);\n      const username = localStorage.getItem(\"user\");\n      const user = JSON.parse(username);\n      const userName = user ? user.name : \"Customer\";\n      const modelName = selectedProduct && selectedProduct.name ? selectedProduct.name : \"[]\";\n      const modelPrice = selectedProduct && selectedProduct.price ? selectedProduct.price : \"[]\";\n      const modelStock = selectedProduct && selectedProduct.stock ? selectedProduct.stock : \"[]\";\n      const modelLink = selectedProduct && selectedProduct.link ? selectedProduct.link : \"[]\";\n      const modelFeature = selectedProduct && selectedProduct.features ? selectedProduct.features : \"[]\";\n      const modelStore = selectedProduct && selectedProduct.store ? selectedProduct.store : \"[]\";\n      const modelLocation = selectedProduct && selectedProduct.location ? selectedProduct.location : \"[]\";\n      const modelBenefit = selectedProduct && selectedProduct.benefits ? selectedProduct.benefits : \"[]\";\n      const mycollection = selectedProduct && selectedProduct.collection_id ? selectedProduct.collection_name : \"[]\";\n      const imageHtml = selectedProduct && selectedProduct.image ? `<img src=\"${Helpers.basePath}/assets/${selectedProduct.image}\" alt=\"${selectedProduct.name}\" style=\"max-width: 100%; height: 200px; align-items: center;text-align:center;display:flex;justify-content:center;margin-left:10%\" />` : \"[]\";\n      const fromField = emailData.detail.headers[\"From\"];\n      const match = fromField.match(/^(.*?)\\s*<(.*)>$/);\n      const reciever_name = match ? match[1] : \"\";\n      const sender_email = isGoogle ? isGoogle.contact : \"\";\n      const sender_phone = profile ? profile.phone : \"\";\n      const sender_address = profile ? profile.address : \"\";\n      const greetingUpdated = templateToUpdate.heading.replace(/\\[SenderName\\]/gi, userName).replace(/\\[ReceiverName\\]/gi, reciever_name).replace(/\\[Model\\]/gi, modelName).replace(/\\[Price\\]/gi, modelPrice).replace(/\\[Stock\\]/gi, modelStock).replace(/\\[Link\\]/gi, modelLink).replace(/\\[Features\\]/gi, modelFeature).replace(/\\[Store\\]/gi, modelStore).replace(/\\[Location\\]/gi, modelLocation).replace(/\\[Benefits\\]/gi, modelBenefit).replace(/\\[SenderEmail\\]/gi, sender_email).replace(/\\[SenderPhone\\]/gi, sender_phone).replace(/\\[SenderAddress\\]/gi, sender_address).replace(/\\[Collection\\]/gi, mycollection).replace(/\\[Image\\]/gi, imageHtml);\n      setFinalTemplate(greetingUpdated);\n    }\n  };\n  useEffect(() => {\n    updateTemplate();\n  }, [selectedProductId, emailData, selectedTemplate, selectedCollectionId]);\n  useEffect(() => {\n    getTemplates();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      // console.log(\"Called\");\n      const username = localStorage.getItem(\"user\");\n      const user = JSON.parse(username);\n      const userName = user ? user.name : \"Customer\";\n      setIsLoading(true);\n      try {\n        const baseUrl = Helpers.apiUrl;\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(`${baseUrl}admin/mail_templates`, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        // This would be \"GitHub\"\n        // console.log(\"asdafgsdbfvxxcbv:\", response);\n        const modelName = selectedProduct && selectedProduct.name ? selectedProduct.name : \"[]\";\n        const modelPrice = selectedProduct && selectedProduct.price ? selectedProduct.price : \"[]\";\n        const modelStock = selectedProduct && selectedProduct.stock ? selectedProduct.stock : \"[]\";\n        const modelLink = selectedProduct && selectedProduct.link ? selectedProduct.link : \"[]\";\n        const modelFeature = selectedProduct && selectedProduct.features ? selectedProduct.features : \"[]\";\n        const modelStore = selectedProduct && selectedProduct.store ? selectedProduct.store : \"[]\";\n        const modelLocation = selectedProduct && selectedProduct.location ? selectedProduct.location : \"[]\";\n        const modelBenefit = selectedProduct && selectedProduct.benefits ? selectedProduct.benefits : \"[]\";\n        const mycollection = selectedProduct && selectedProduct.collection_id ? selectedProduct.collection_name : \"[]\";\n        // console.log(\"asdfcxe\", mycollection);\n        const imageHtml = selectedProduct && selectedProduct.image ? `<img src=\"${Helpers.basePath}/assets/${selectedProduct.image}\" alt=\"${selectedProduct.name}\" style=\"max-width: 100%; height: 200px; align-items: center;text-align:center;display:flex;justify-content:center;margin-left:10%\" />` : \"[]\";\n        const fromField = emailData.detail.headers[\"From\"];\n        const match = fromField.match(/^(.*?)\\s*<(.*)>$/);\n        const reciever_name = match ? match[1] : \"\";\n        const sender_email = isGoogle ? isGoogle.contact : \"\";\n        const sender_phone = profile ? profile.phone : \"\";\n        const sender_address = profile ? profile.address : \"\";\n        if (response.status === 200) {\n          const modifiedTemplates = response.data.data.map(template => {\n            const greetingUpdated = template.heading.replace(/\\[SenderName\\]/gi, userName).replace(/\\[ReceiverName\\]/gi, reciever_name).replace(/\\[Model\\]/gi, modelName).replace(/\\[Price\\]/gi, modelPrice).replace(/\\[Stock\\]/gi, modelStock).replace(/\\[Link\\]/gi, modelLink).replace(/\\[Features\\]/gi, modelFeature).replace(/\\[Store\\]/gi, modelStore).replace(/\\[Location\\]/gi, modelLocation).replace(/\\[Benefits\\]/gi, modelBenefit).replace(/\\[SenderEmail\\]/gi, sender_email).replace(/\\[SenderPhone\\]/gi, sender_phone).replace(/\\[SenderAddress\\]/gi, sender_address).replace(/\\[Collection\\]/gi, mycollection).replace(/\\[Image\\]/gi, imageHtml);\n            return {\n              ...template,\n              heading: greetingUpdated\n            };\n          });\n          setTemplates(modifiedTemplates);\n        } else {\n          // console.log(\"Received non-200 response:\", response.status);\n        }\n      } catch (error) {\n        console.error(\"An error occurred:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    // fetchData();\n  }, [selectedProductId, emailData, selectedTemplate, selectedCollectionId]);\n\n  // const [selectedCollectionId, setSelectedCollectionId] = useState(\"\");\n  // const [selectedProductId, setSelectedProductId] = useState(\"\");\n\n  // // Handle change in selection\n  // const handleSelectionChange = (event) => {\n  //   setSelectedCollectionId(event.target.value);\n  //   console.log(selectedCollectionId);\n  // };\n\n  // const handleProductChange = (event) => {\n  //   setSelectedProductId(event.target.value);\n  // };\n  // // Find the selected product based on selectedProductId\n  // // Ensure products is an array before calling .find\n  // const selectedProduct = products?.find(\n  //   (product) => String(product.id) === String(selectedProductId)\n  // );\n  // const selectedTemplates = templates?.find(\n  //   (template) => String(template.id) === String(setSelectedTemplateId)\n  // );\n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     setIsLoading(true);\n  //     try {\n  //       const baseUrl = Helpers.apiUrl;\n  //       // const data = {}; // Your request payload\n  //       // Retrieve token if needed\n  //       const token = localStorage.getItem(\"token\");\n  //       console.log(\"token\", token);\n  //       const response = await axios.get(`${baseUrl}collects`, {\n  //         headers: {\n  //           Accept: \"application/json\",\n  //           \"Content-Type\": \"application/json\",\n  //           Authorization: `Bearer ${token}`,\n  //         },\n  //       });\n\n  //       console.log(\"response\", response.data.data);\n\n  //       if (response.status === 200) {\n  //         // console.log(response.data.user);\n  //         // Assuming you want to store the emails in state\n  //         setCollection(response.data.data);\n\n  //         // Redirect or perform further actions\n  //         console.log(response.data);\n  //       } else {\n  //         console.log(\"Received non-200 response:\", response.status);\n  //       }\n  //     } catch (error) {\n  //       console.error(\"An error occurred:\", error);\n  //       // Handle error\n  //       if (error.response) {\n  //         // Server responded with a status code outside 2xx range\n  //         console.error(\"Error data:\", error.response.data);\n  //         console.error(\"Error status:\", error.response.status);\n  //       } else if (error.request) {\n  //         // No response was received to the request\n  //         console.error(\"No response received:\", error.request);\n  //       } else {\n  //         // An error occurred in setting up the request\n  //         console.error(\"Error message:\", error.message);\n  //       }\n  //     } finally {\n  //       setIsLoading(false);\n  //     }\n  //   };\n\n  //   fetchData();\n  // }, []); // Empty dependency array means this effect runs once after the initial render\n\n  // For passing data in email preview section\n  const [selectedGreetingText, setSelectedGreetingText] = useState(\"\");\n  const handleGreetingButton = greetingText => {\n    setSelectedGreetingText(greetingText);\n    console.log(greetingText); // Now this directly logs the greetings text\n  };\n\n  // For passing location Id\n  const [locationId, setLocationId] = useState(null);\n  const handleLocationButton = location => {\n    setLocationId(location);\n  };\n  const locations = [\"New York\", \"Los Angeles\", \"Chicago\", \"Pakistan\", \"Poland\"]; // Add more locations as needed\n  const sliderSettings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 3,\n    initialSlide: 0,\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        infinite: true,\n        dots: true\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2,\n        initialSlide: 2\n      }\n    }, {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  };\n  useEffect(() => {\n    console.log(locationId, 'location id');\n  }, [locationId]);\n  const [stock, setStock] = useState(\"\");\n  const handleStockChange = status => {\n    setStock(status);\n    // console.log(stock);\n  };\n  // console.log(\"SELECTED MAIL\", emailData);\n  const [showPreview, setShowPreview] = useState(false); // New state for toggling the preview\n  const handleProceed = () => {\n    // Toggle the visibility of the email preview section\n    setShowPreview(true);\n    // console.log(showPreview);\n  };\n  const [resposne, setResponse] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const baseUrl = Helpers.apiUrl;\n    const token = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"user\");\n    const user = JSON.parse(username);\n    const myuser = user ? user.name : null;\n    const myemail = user ? user.email : null;\n\n    // console.log(\"Usernaem\", myuser);\n    // console.log(\"SELECTED MAIL\", emailData);\n    const fromField = emailData.detail.headers[\"From\"];\n    const match = fromField.match(/^(.*?)\\s*<(.*)>$/);\n    const reciever_name = match ? match[1] : \"\"; // This would be \"GitHub\"\n    // console.log(reciever_name);\n    const reciever_email = match ? match[2] : fromField;\n    // console.log(reciever_email);\n    const payload = {\n      email_address: myemail,\n      greeting: selectedGreetingText,\n      reciever_name,\n      reciever_email,\n      template_id: selectedTemplateId,\n      product_id: selectedProductId,\n      responder_name: myuser\n    };\n    try {\n      const response = await axios.post(`${baseUrl}email-preview`, payload, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        // console.log(\"Response data:\", response.data);\n        // console.log(\"Body:\", response.data.body);\n        setResponse(response.data.body);\n        Helpers.toast(\"success\", \"Operation Successful\");\n      } else {\n        console.log(\"Operation not successful, response status:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"An error occurred:\", error);\n    }\n  };\n  const [sendisLoading, setsendisLoading] = useState(false);\n  const handleEmailSend = async e => {\n    e.preventDefault();\n    setsendisLoading(true);\n    const baseUrl = Helpers.apiUrl;\n    const token = localStorage.getItem(\"token\");\n    const fromField = emailData.detail.headers[\"From\"];\n    const received_message = emailData.detail.snippet;\n    const match = fromField.match(/^(.*?)\\s*<(.*)>$/);\n    const reply_to = match ? match[2] : fromField;\n    const fromField1 = emailData.detail.headers[\"From\"];\n    const match1 = fromField1.match(/^(.*?)\\s*<(.*)>$/);\n    const reciever_name = match1 ? match1[1] : \"\"; // This would be \"GitHub\"\n    // console.log(\"asdfvcxyh\", reciever_name);\n    const reciever_email = match ? match[2] : fromField1;\n    // console.log(reciever_email);\n\n    const formData = {\n      template_id: selectedTemplateId,\n      product_id: selectedProductId,\n      greeting: selectedGreetingText,\n      response: resposne,\n      // You need to define what this response should be.\n      reply_to: reply_to,\n      received_message: received_message,\n      responder_name: profile.name,\n      responder_mail: isGoogle.contact,\n      sender_phone: profile.phone,\n      sender_address: profile.address,\n      reciever_name: reciever_name,\n      reciever_email: reciever_email\n    };\n    try {\n      const response = await axios.post(`${baseUrl}gmail/send-email`, formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        // console.log(\"reponseemail\", response.data);\n        Helpers.toast(\"success\", response.data.message);\n      } else {\n        console.log(\"Not sending mail\");\n        Helpers.toast(\"error\", \"Error in Sending Mail \");\n      }\n    } catch (error) {\n      console.error(\"Error in Sending Mail \", error);\n      Helpers.toast(\"error\", \"Error in Sending Mail \");\n    } finally {\n      setsendisLoading(false); // Ensure isLoading is set to false in finally block\n    }\n  };\n\n  /// Filters\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [showSearch, setShowSearch] = useState(false); // Search input hidden by default\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isFilterActive, setIsFilterActive] = useState(false);\n  const [isDateFilterActive, setIsDateFilterActive] = useState(false);\n\n  // const filteredMails = mails\n  //   .filter((mail) => {\n  //     // const mailDate = new Date(mail.detail.headers.Date);\n  //     // return (\n  //     //   (!startDate || mailDate >= startDate) &&\n  //     //   (!endDate || mailDate <= endDate)\n  //     // );\n  //     const mailDate = new Date(mail.detail.headers.Date);\n\n  //     // Ensure we're comparing only the date parts if times are not important\n  //     const startOfDay = startDate\n  //       ? new Date(new Date(startDate).setHours(0, 0, 0, 0))\n  //       : null;\n  //     const endOfDay = endDate\n  //       ? new Date(new Date(endDate).setHours(23, 59, 59, 999))\n  //       : null;\n  //     return (\n  //       (!startOfDay || mailDate >= startOfDay) &&\n  //       (!endOfDay || mailDate <= endOfDay)\n  //     );\n  //   })\n  //   .filter((mail) => {\n  //     const lowerCaseSearchTerm = searchTerm.toLowerCase();\n\n  //     // Check if the search term is present anywhere in the snippet\n  //     const isSearchTermInSnippet = mail.detail.snippet\n  //       .toLowerCase()\n  //       .includes(lowerCaseSearchTerm);\n\n  //     // Optionally, check if the search term is present in the 'From' field\n  //     const isSearchTermInFrom =\n  //       mail.detail.headers.From.toLowerCase().includes(lowerCaseSearchTerm);\n\n  //     // Return true if search term is found in either the snippet or 'From' field\n  //     return isSearchTermInSnippet || isSearchTermInFrom; // Use OR to combine if finding in either is sufficient\n  //   });\n  const filteredMails = mails.filter(mail => {\n    const mailDate = new Date(mail.detail.headers.Date);\n    const startOfDay = startDate ? new Date(new Date(startDate).setHours(0, 0, 0, 0)) : null;\n    const endOfDay = endDate ? new Date(new Date(endDate).setHours(23, 59, 59, 999)) : null;\n    const isDateFiltered = !startOfDay || mailDate >= startOfDay && (!endOfDay || mailDate <= endOfDay);\n    return isDateFiltered;\n  }).filter(mail => {\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\n    const isSearchTermInSnippet = mail.detail.snippet.toLowerCase().includes(lowerCaseSearchTerm);\n    const isSearchTermInFrom = mail.detail.headers.From.toLowerCase().includes(lowerCaseSearchTerm);\n    const isSearchFiltered = isSearchTermInSnippet || isSearchTermInFrom;\n    return isSearchFiltered;\n  });\n\n  // Update isFilterActive based on filters applied\n  useEffect(() => {\n    setIsDateFilterActive(startDate !== null || endDate !== null || searchTerm !== \"\");\n  }, [startDate, endDate, searchTerm]);\n  const [showInputs, setShowInputs] = useState(false);\n  const [sortDirection, setSortDirection] = useState(\"desc\"); // or 'desc' for default descending\n  const toggleSort = () => {\n    // Assuming the initial sortDirection state is \"desc\"\n    const newSortDirection = sortDirection === \"asc\" ? \"desc\" : \"asc\";\n    setSortDirection(newSortDirection);\n\n    // Perform sorting\n    setMails(currentMails => {\n      return [...currentMails].sort((a, b) => {\n        const dateA = new Date(a.detail.headers.Date);\n        const dateB = new Date(b.detail.headers.Date);\n        return newSortDirection === \"asc\" ? dateA - dateB : dateB - dateA;\n      });\n    });\n  };\n  const toggleSearchInput = () => {\n    setShowSearch(!showSearch); // Toggle the current state of the search input\n    if (showInputs) {\n      // If the date inputs are currently shown, hide them\n      setShowInputs(false);\n    }\n  };\n  const toggleInputs = () => {\n    setShowInputs(!showInputs); // Toggle the current state of the date inputs\n    if (showSearch) {\n      // If the search input is currently shown, hide it\n      setShowSearch(false);\n    }\n  };\n  const [selectedMailId, setSelectedMailId] = useState(null);\n  const handleSelectMail = mailId => {\n    setSelectedMailId(mailId);\n  };\n  const selectGreetingBasedOnTime = () => {\n    const hours = new Date().getHours();\n    let greeting;\n    if (hours < 12) {\n      greeting = \"Good Morning\";\n    } else if (hours >= 12 && hours <= 17) {\n      greeting = \"Good Afternoon\";\n    } else {\n      greeting = \"Good Evening\";\n    }\n    setSelectedGreetingText(greeting);\n  };\n  useEffect(() => {\n    selectGreetingBasedOnTime();\n  }, []); // The empty array ensures this effect runs once on mount\n  const [team, setTeam] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        // console.log(token);\n        const url = Helpers.apiUrl; // Confirm this points to your API\n        const response = await axios.get(`${url}getuserlist`, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.status === 200) {\n          // Assuming response.data.data is an array of user objects\n          setTeam(response.data.data); // Directly set the array of user objects to state\n        } else {\n          console.log(\"Error in getting user list\");\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const [selectedAssignId, setSelectedAssignId] = useState(\"\");\n  const [assignSuccess, setAssignSuccess] = useState(false);\n  const handleAssignChange = async selectedOption => {\n    const selectedId = selectedOption ? selectedOption.value : \"\";\n    setSelectedAssignId(selectedId);\n    if (!selectedId) return; // Early return if no selection\n\n    const url = Helpers.apiUrl;\n    const token = localStorage.getItem(\"token\");\n    try {\n      const response = await fetch(`${url}assignuser`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          team_id: selectedId,\n          message_id: messageId\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        Helpers.toast(\"success\", \"Assigned successfully\");\n        // You might want to update state or show a success message to the user\n      } else {\n        // Use the error message from the server if available, otherwise a default error message\n        throw new Error(data.error || \"Failed to assign email\");\n      }\n    } catch (error) {\n      // Handle errors that occur during fetching or in response handling\n      // Displaying error messages using toast notifications\n      Helpers.toast(\"error\", error.message || \"An error occurred\");\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // const handleAssignChange = (event) => {\n  //   setSelectedAssignId(event.target.value);\n  // };\n  const filterAssign = async () => {\n    const url = Helpers.apiUrl;\n    const token = localStorage.getItem(\"token\");\n    try {\n      const response = await axios.get(`${url}getassignuser`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      // console.log(response.data); // Log response data\n      // Assuming your state variable for message IDs is called 'assignedMessageIds'\n      const assignedMessageIds = response.data.data.map(item => item.message_id);\n      // Now, filter emails based on assigned message IDs\n      const filteredMails = mails.filter(mail => assignedMessageIds.includes(mail.detail.headers[\"Message-ID\"]));\n      setMails(filteredMails);\n      setAssignSuccess(true);\n    } catch (error) {\n      console.error(\"Error:\", error); // Log error\n    }\n  };\n  const [selectedMemberId, setSelectedMemberId] = useState(\"\");\n  // const handleMemberChange = (event) => {\n  //   setSelectedMemberId(event.target.value);\n  //   filterMember(event.target.value);\n  // };\n\n  const handleMemberChange = selectedOption => {\n    if (selectedOption) {\n      // console.log(\"Selected Member ID:\", selectedOption.value);\n      setSelectedMemberId(selectedOption.value);\n      filterMember(selectedOption.value);\n    } else {\n      setSelectedMemberId(\"\"); // or handle deselecting differently if needed\n    }\n  };\n\n  // Function to filter emails based on selected member ID\n  const filterMember = async memberId => {\n    // console.log(\"Member ID:\", memberId); // Logging the member ID\n    const url = Helpers.apiUrl;\n    const token = localStorage.getItem(\"token\");\n    try {\n      const response = await axios.get(`${url}getassignuser`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // console.log(\"Get assignResponse data:\", response.data); // Log the response data\n      if (response.status === 200) {\n        const assignedData = response.data.data;\n        // console.log(\"Assigned Data:\", assignedData); // Debugging log\n\n        // Filter to get assigned message IDs for the selected team ID\n        const assignedMessageIds = assignedData.filter(item => String(item.team_id) === String(memberId)).map(item => item.message_id);\n\n        // console.log(\"Assigned Message IDs:\", assignedMessageIds); // Log the filtered message IDs\n\n        // Filter the emails based on the assigned message IDs\n        const filteredMails = mails.filter(mail => assignedMessageIds.includes(String(mail.detail.headers[\"Message-ID\"])));\n\n        // console.log(\"Filtered Mails:\", filteredMails); // Log the filtered mails\n        setMails(filteredMails); // Set the filtered mails\n        setAssignSuccess(true); // Indicate success\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setAssignSuccess(false); // Indicate an error occurred\n    }\n  };\n  const [expandedMailId, setExpandedMailId] = useState(null);\n  const handleToggleDetails = mailId => {\n    if (expandedMailId === mailId) {\n      setExpandedMailId(null);\n    } else {\n      setExpandedMailId(mailId); // Expand if not expanded\n      setSelectedMailId(mailId);\n    }\n  };\n  const options = team.map(member => ({\n    value: member.id,\n    label: member.user_name\n  }));\n  const options1 = team.map(member => ({\n    value: member.id,\n    // make sure this is correctly populated\n    label: member.user_email // and this too\n  }));\n  const customStyles1 = {\n    control: styles => ({\n      ...styles,\n      backgroundColor: \"#D9D9D9B2\",\n      color: \"#ADADAD\"\n    })\n  };\n  const customStyles = {\n    control: styles => ({\n      ...styles,\n      backgroundColor: \"#E2545E\",\n      color: \"white\",\n      boxShadow: \"none\"\n    }),\n    singleValue: styles => ({\n      ...styles,\n      color: \"white\" // affects the selected option label\n    }),\n    placeholder: styles => ({\n      ...styles,\n      color: \"white\" // This will change the placeholder text color\n    }),\n    input: styles => ({\n      ...styles,\n      color: \"white\" // This will change the text color as you type in the search input\n    }),\n    dropdownIndicator: styles => ({\n      ...styles,\n      color: \"white\" // Arrow icon color\n    }),\n    // option: (styles, { isFocused, isSelected }) => ({\n    //   ...styles,\n    //   backgroundColor: isFocused ? \"lightgray\" : isSelected ? \"gray\" : null,\n    //   color: isFocused || isSelected ? \"black\" : \"gray\", // Changing color conditionally based on focus\n    // }),\n    noOptionsMessage: styles => ({\n      ...styles,\n      color: \"white\" // No options available message color\n    }),\n    menu: styles => ({\n      ...styles,\n      backgroundColor: \"#E2545E\" // Dropdown background\n    })\n  };\n  const [profile, setProfile] = useState(null);\n  useEffect(() => {\n    const fetchDetail = async () => {\n      try {\n        const url = Helpers.apiUrl;\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(`${url}profile`, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.status === 200) {\n          // console.log(\"API Response:\", response.data.data.profile);\n          setProfile(response.data.data);\n        } else {\n          // console.log(\"Received non-200 response:\", response.status);\n        }\n      } catch (error) {\n        console.error(\"Error fetching profile data:\", error);\n      }\n    };\n    fetchDetail();\n  }, []);\n  const toggleFilter = () => {\n    if (!isFilterActive) {\n      filterAssign(); // Apply the filter\n    }\n    setIsFilterActive(!isFilterActive); // Toggle the active state of the filter\n  };\n  const clearDateFilter = () => {\n    setStartDate(null);\n    setEndDate(null);\n    setSearchTerm(\"\");\n    setIsFilterActive(false); // Ensure this is reset when filters are cleared\n  };\n  const clearFilter = () => {\n    fetchData(); // Fetch initial data to reset filters\n    setIsFilterActive(false); // Reset the filter active state\n  };\n  const [activeIcon, setActiveIcon] = useState(null);\n  // const [sortDirection, setSortDirection] = useState(\"asc\");\n\n  const handleIconClick = iconName => {\n    setActiveIcon(activeIcon === iconName ? null : iconName);\n  };\n  const toggleSortDirection = () => {\n    setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n    handleIconClick(\"sort\");\n  };\n  const iconStyle = iconName => ({\n    fontSize: \"15px\",\n    color: activeIcon === iconName ? \"white\" : \"#AEAEAE\",\n    cursor: \"pointer\",\n    backgroundColor: activeIcon === iconName ? \"#E2545E\" : \"transparent\",\n    padding: \"11px\",\n    borderRadius: \"5px\",\n    border: \"1px solid #DFE2EB\",\n    marginLeft: \"8px\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex text-gray-900\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container \",\n        style: {\n          borderRadius: \"20px\",\n          background: \"#F9F9F9\",\n          marginTop: \"2%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row  mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-12 w-full p-4   border-gray-200 rounded-lg  sm:p-6  dark:border-gray-700\",\n                style: {\n                  maxHeight: \"90vh\",\n                  overflowY: \"auto\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \" d-flex\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"text-3xl font-bold \",\n                    children: \"Inbox\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1344,\n                    columnNumber: 21\n                  }, this), isGoogle ? /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"countries\",\n                    className: \"bg-gray-50   rounded-lg focus:ring-blue-500 focus:border-blue-500 block  p-2  dark:focus:ring-blue-500 dark:focus:border-blue-500\",\n                    style: {\n                      borderRadius: \"50px\",\n                      marginLeft: \"3%\",\n                      width: \"50%\",\n                      background: \"#F0F0F0\",\n                      color: \"#C2C2C2\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"option\", {\n                      selected: true,\n                      children: isGoogle.contact\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1358,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1347,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1361,\n                    columnNumber: 23\n                  }, this), isDateFilterActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn flex-1 py-2\",\n                    style: {\n                      background: \"#E2545E\",\n                      color: \"white\",\n                      marginLeft: \"1rem\"\n                    },\n                    onClick: clearDateFilter,\n                    children: \"Clear\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1364,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1376,\n                    columnNumber: 23\n                  }, this), assignSuccess ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn flex-1 py-2\",\n                    style: {\n                      background: \"#E2545E\",\n                      color: \"white\",\n                      marginLeft: \"1rem\"\n                    },\n                    onClick: clearFilter,\n                    children: \"Clear\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1380,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1392,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1343,\n                  columnNumber: 19\n                }, this), userNotFound ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      padding: \"25%\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"/media/empty.png\",\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1398,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1397,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: loginWithGoogle,\n                    className: \"btn flex-1 py-2\",\n                    style: {\n                      background: \"#E2545E\",\n                      color: \"white\",\n                      alignItems: \"center\",\n                      // marginTop: \"10%\",\n                      marginLeft: \"25%\"\n                    },\n                    children: \"Connect With Gmail\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1400,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1396,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"pt-5 d-flex\",\n                    style: {\n                      width: \"100%\",\n                      position: \"static\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        flex: \"1\"\n                      },\n                      children: mails.length === 0 ? /*#__PURE__*/_jsxDEV(Select, {\n                        styles: customStyles,\n                        placeholder: \"All Users\",\n                        isClearable: true,\n                        style: {\n                          color: \"white\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1422,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(Select, {\n                        styles: customStyles,\n                        options: options1,\n                        placeholder: \"All Users\",\n                        onChange: handleMemberChange,\n                        isClearable: true,\n                        style: {\n                          color: \"white\"\n                        },\n                        isSearchable: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1429,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1420,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"icons flex ml-5\",\n                      style: {\n                        flex: \"0 0 auto\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        onClick: () => handleIconClick(\"calendar\"),\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fa-light fa-calendar-range\",\n                          style: iconStyle(\"calendar\"),\n                          title: \"Calendar\",\n                          onClick: toggleInputs\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1445,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1444,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        onClick: () => handleIconClick(\"search\"),\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fa-light fa-magnifying-glass\",\n                          style: iconStyle(\"search\"),\n                          title: \"Search\",\n                          onClick: toggleSearchInput\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1453,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1452,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        onClick: toggleSortDirection,\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: `fa-sharp fa-light ${sortDirection === \"asc\" ? \"fa-arrow-up-arrow-down\" : \"fa-arrow-down-arrow-up\"}`,\n                          style: iconStyle(\"sort\"),\n                          title: `Sort ${sortDirection === \"asc\" ? \"Ascending\" : \"Descending\"}`,\n                          onClick: toggleSort\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1461,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1460,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"icon-wrapper rounded p-3 border border-gray-300 ml-2\",\n                        style: {\n                          cursor: \"pointer\",\n                          color: isFilterActive ? \"white\" : \"#AEAEAE\",\n                          backgroundColor: isFilterActive ? \"#E2545E\" : \"transparent\"\n                        },\n                        onClick: toggleFilter,\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fa-light fa-circle-check\",\n                          style: {\n                            fontSize: \"15px\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1487,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1476,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"icon-wrapper rounded p-3 border border-gray-300 ml-2\",\n                        style: {\n                          cursor: \"pointer\"\n                        },\n                        title: \"Login With Google\",\n                        onClick: loginWithGoogle,\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fa-light fa-arrows-rotate\",\n                          style: {\n                            fontSize: \"15px\",\n                            color: \"#AEAEAE\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1500,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1492,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1440,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1416,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-center items-center space-x-4\",\n                    children: [showInputs &&\n                    /*#__PURE__*/\n                    // This line checks if showInputs is true\n                    _jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"pt-5 d-flex\",\n                        style: {\n                          width: \"100%\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex\",\n                          style: {\n                            flex: \"1\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"p-2 flex \",\n                            style: {\n                              flex: \"1\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"date\",\n                              value: startDate ? startDate.toISOString().substring(0, 10) : \"\",\n                              onChange: e => setStartDate(e.target.value ? new Date(e.target.value) : null),\n                              placeholder: \"Select start date\",\n                              style: {\n                                padding: \"5%\",\n                                width: \"100%\",\n                                borderRadius: \"30px\"\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1520,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1516,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"p-2 flex\",\n                            style: {\n                              flex: \"1\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"date\",\n                              value: endDate ? endDate.toISOString().substring(0, 10) : \"\",\n                              onChange: e => setEndDate(e.target.value ? new Date(e.target.value) : null),\n                              placeholder: \"Select end date\",\n                              style: {\n                                padding: \"5% \",\n                                width: \"100%\",\n                                borderRadius: \"30px\"\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1545,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1544,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1515,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1511,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false), showSearch && /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: searchTerm,\n                      onChange: e => setSearchTerm(e.target.value),\n                      placeholder: \"Search mails\",\n                      className: \"search-input-class\" // Add your CSS class for styling\n                      ,\n                      style: {\n                        width: \"100%\",\n                        padding: \"2%\",\n                        marginTop: \"2%\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1572,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1508,\n                    columnNumber: 23\n                  }, this), filteredMails.length === 0 && !userNotFound ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      padding: \"25%\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"/media/no_result_found.png\",\n                      alt: \"No results found\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1588,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1587,\n                    columnNumber: 25\n                  }, this) : mails && filteredMails.map((mail, index) => {\n                    var _mail$detail, _mail$detail$headers;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                        className: \"my-5 space-y-3 shadow\",\n                        style: {\n                          borderRadius: \"50px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"li\", {\n                          className: `rounded-lg ${selectedMailId === mail.detail.headers[\"Message-ID\"] ? \"selected-outline\" : \"\"}`,\n                          children: [/*#__PURE__*/_jsxDEV(Link, {\n                            to: `/user/dashboard/${mail.detail.headers[\"Message-ID\"]}`,\n                            className: `flex items-center p-3 bg-white text-base font-bold text-gray-900 rounded-lg hover:bg-gray-100 group hover:shadow dark:hover:bg-gray-100 dark:text-white`,\n                            onClick: () => handleToggleDetails(mail.detail.headers[\"Message-ID\"]),\n                            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                              src: \"/media/avatars/300-1.jpg\",\n                              alt: \"\",\n                              className: \"w-12 h-12 rounded-full\",\n                              style: {\n                                width: \"50px\",\n                                height: \"50px\",\n                                borderRadius: \"10px\"\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1618,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"flex flex-col flex-grow ms-3\",\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"flex\",\n                                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                  className: \"whitespace-nowrap\",\n                                  children: [mail.detail.headers.From.split(\" <\")[0], \" \"]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1630,\n                                  columnNumber: 39\n                                }, this), assignSuccess ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fa-light fa-circle-check\",\n                                  style: {\n                                    fontSize: \"15px\",\n                                    color: \"green\",\n                                    cursor: \"pointer\",\n                                    marginLeft: \"3%\",\n                                    marginTop: \"0%\"\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1638,\n                                  columnNumber: 41\n                                }, this) : \"\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1629,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                                className: \"text-xs\",\n                                style: {\n                                  color: \"#C2C2C2\"\n                                },\n                                children: (_mail$detail = mail.detail) !== null && _mail$detail !== void 0 && (_mail$detail$headers = _mail$detail.headers) !== null && _mail$detail$headers !== void 0 && _mail$detail$headers.Date ? mail.detail.headers.Date : \"\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1652,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                className: \"text-xs\",\n                                style: {\n                                  color: \"#C2C2C2\",\n                                  width: \"100%\"\n                                },\n                                children: mail.detail.headers.Subject\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1661,\n                                columnNumber: 37\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1628,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fa-solid fa-caret-down ml-auto text-gray-500\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1675,\n                              columnNumber: 35\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1609,\n                            columnNumber: 33\n                          }, this), expandedMailId === mail.detail.headers[\"Message-ID\"] && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bg-white p-3 rounded-lg \",\n                            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"text-xs\",\n                              children: [\"Message:- \", mail.detail.snippet]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1685,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"text-xs\",\n                              children: [\"Received:- \", mail.detail.headers.Date]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1689,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1679,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1601,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1597,\n                        columnNumber: 29\n                      }, this)\n                    }, mail.detail.headers[\"Message-ID\"], false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1596,\n                      columnNumber: 27\n                    }, this);\n                  })]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1339,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1338,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card bg-white p-4 border border-gray-200 rounded-lg shadow sm:p-6\",\n              style: {\n                maxHeight: \"90vh\",\n                overflowY: \"auto\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-card bg-gray-100 mt-2 p-4 border border-gray-200 rounded-lg\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"text-xl\",\n                  style: {\n                    color: \"#666666\"\n                  },\n                  children: \"Assign Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1712,\n                  columnNumber: 19\n                }, this), userNotFound ? /*#__PURE__*/_jsxDEV(Select, {\n                  style: {\n                    background: \"#D9D9D9B2\",\n                    color: \"#ADADAD\"\n                  },\n                  className: \"basic-single mt-3\",\n                  classNamePrefix: \"select\",\n                  styles: customStyles1,\n                  placeholder: \"Select a team member\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1716,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Select, {\n                  style: {\n                    background: \"#D9D9D9B2\",\n                    color: \"#ADADAD\"\n                  },\n                  className: \"basic-single mt-3\",\n                  classNamePrefix: \"select\",\n                  defaultValue: options[0],\n                  isClearable: true,\n                  isSearchable: true,\n                  styles: customStyles1,\n                  name: \"teamSelect\",\n                  options: options // Your options array here\n                  ,\n                  onChange: handleAssignChange,\n                  placeholder: \"Select a team member\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1724,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1711,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-card bg-gray-100 mt-2 p-4 border border-gray-200 rounded-lg \",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"text-xl\",\n                  style: {\n                    color: \"#666666\"\n                  },\n                  children: \"Responder Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1741,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex mt-2\",\n                  children: isGoogle ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\"\n                    // placeholder=\"M Zubair Khan\"\n                    ,\n                    disabled: true,\n                    value: isGoogle.contact,\n                    style: {\n                      background: \"#D9D9D9B2\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1746,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1755,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1744,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1740,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-card bg-gray-100 mt-2 p-4 border border-gray-200 rounded-lg \",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"text-xl\",\n                  style: {\n                    color: \"#666666\"\n                  },\n                  children: \"Choose Template\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1760,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select mt-3 block w-full p-2.5 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\",\n                  defaultValue: \"\",\n                  onChange: handleTemplateChange,\n                  value: selectedTemplateId || \"\",\n                  style: {\n                    background: \"#D9D9D9B2\",\n                    color: \"#ADADAD\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Select Template\",\n                    children: \"Select Template\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1770,\n                    columnNumber: 21\n                  }, this), templates.map(template => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: template.id,\n                    children: template.template_name\n                  }, template.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1772,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1763,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1759,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-card bg-gray-100 mt-2 p-4 border border-gray-200 rounded-lg\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"text-xl\",\n                  style: {\n                    color: \"#666666\"\n                  },\n                  children: \"Store Location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1779,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(Slider, {\n                  ...sliderSettings,\n                  children: locations.map(location => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"flex-1 border-primary rounded-lg py-2 w-full\",\n                      style: locationId === location ? {\n                        background: \"#E2545E\",\n                        color: \"white\",\n                        padding: \"2% 5%\"\n                      } : {\n                        background: \"#D9D9D9B2\",\n                        color: \"#C8C6C6\",\n                        padding: \"2% 5%\"\n                      },\n                      onClick: () => handleLocationButton(location),\n                      children: location\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1783,\n                      columnNumber: 13\n                    }, this)\n                  }, location, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1782,\n                    columnNumber: 11\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1780,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1778,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-card bg-gray-100 mt-2 p-4 border border-gray-200 rounded-lg\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"text-xl\",\n                  style: {\n                    color: \"#666666\"\n                  },\n                  children: \"Collections\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1876,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select mt-3 block w-full p-2.5 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\",\n                  value: selectedCollectionId,\n                  onChange: handleSelectionChange,\n                  style: {\n                    background: \"#D9D9D9B2\",\n                    color: \"#ADADAD\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select a collection\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1885,\n                    columnNumber: 21\n                  }, this), collections.map(collection => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: collection.id,\n                    children: collection.name\n                  }, collection.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1887,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1879,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1875,\n                columnNumber: 17\n              }, this), selectedCollectionId && filteredProducts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-card bg-gray-100 mt-2 p-4 border border-gray-200 rounded-lg\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"text-xl\",\n                  style: {\n                    color: \"#666666\"\n                  },\n                  children: \"Model Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1895,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select mt-3 block w-full p-2.5 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\",\n                  value: selectedProductId,\n                  onChange: handleProductChange,\n                  style: {\n                    background: \"#D9D9D9B2\",\n                    color: \"#ADADAD\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select a model\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1904,\n                    columnNumber: 23\n                  }, this), filteredProducts.map(product => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: product.id,\n                    children: product.name\n                  }, product.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1906,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1898,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1894,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1707,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1706,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              style: {\n                maxHeight: \"90vh\",\n                overflowY: \"auto\"\n              },\n              children: selectedTemplate ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-12 w-full p-2 bg-white border-gray-200 rounded-lg sm:p-6 dark:bg-gray-800 dark:border-gray-700\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card shadow-none\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"small text-dark\",\n                      style: {\n                        whiteSpace: \"pre-wrap\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        dangerouslySetInnerHTML: {\n                          __html: finalTemplate\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1929,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1925,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1924,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      marginBottom: \"3%\",\n                      marginRight: \"3%\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"form\", {\n                      onSubmit: handleEmailSend,\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"submit\",\n                        className: \"btn flex-1 py-2\",\n                        style: {\n                          background: \"#E2545E\",\n                          color: \"white\",\n                          marginLeft: \"1rem\"\n                        },\n                        disabled: sendisLoading,\n                        children: sendisLoading ? \"Please Wait...\" : \"Send\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1969,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1968,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1960,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1923,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1922,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: \"30%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/media/result.png\",\n                  alt: \"No template selected\",\n                  style: {\n                    width: \"100%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1987,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    alignItems: \"center\",\n                    textAlign: \"center\",\n                    paddingTop: \"8%\",\n                    paddingBottom: \"5%\"\n                  },\n                  children: \"Please Choose the template\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1992,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1986,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1917,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1916,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1336,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1326,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"hN1W0vM1aN5g92uLjwosmEP4dNg=\", false, function () {\n  return [useNavigate, useGoogleLogin, useParams];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Header","Sidebar","Footer","Link","useParams","BtnSpinner","Helpers","axios","Select","useGoogleLogin","GoogleOAuthProvider","useNavigate","DatePicker","Template","Send","LocationSlider","Slider","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","document","title","inputs","setInputs","googleLoading","setGoogleLoading","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","mails","setMails","isGoogle","setIsGoogle","userNotFound","setUserNotFound","fetchDetail","url","apiUrl","token","localStorage","getItem","response","get","headers","Accept","Authorization","status","data","error","console","baseUrl","navigate","loginWithGoogle","scope","onSuccess","tokenResponse","usertoken","access_token","post","window","location","reload","log","request","message","onError","fetchData","emails","map","email","detail","JSON","parse","e","id","setAssignSuccess","userJson","user","userEmail","collection_id","setCollection","emailData","setEmailData","messageId","emailMessage","find","templates","setTemplates","selectedTemplateId","setSelectedTemplateId","finalTemplate","setFinalTemplate","handleTemplateChange","event","target","value","selectedTemplate","template","String","products","setProducts","collections","setCollections","allProducts","setAllProducts","selectedCollectionId","setSelectedCollectionId","selectedProductId","setSelectedProductId","filteredProducts","setFilteredProducts","fetchCollections","handleAPIError","fetchProducts","filtered","filter","product","handleSelectionChange","handleProductChange","productCollectionId","isSelectedCollectionId","selectedProduct","setSelectedProduct","p","getTemplates","updateTemplate","templateToUpdate","temp","username","userName","name","modelName","modelPrice","price","modelStock","stock","modelLink","link","modelFeature","features","modelStore","store","modelLocation","modelBenefit","benefits","mycollection","collection_name","imageHtml","image","basePath","fromField","match","reciever_name","sender_email","contact","sender_phone","profile","phone","sender_address","address","greetingUpdated","heading","replace","modifiedTemplates","selectedGreetingText","setSelectedGreetingText","handleGreetingButton","greetingText","locationId","setLocationId","handleLocationButton","locations","sliderSettings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","settings","setStock","handleStockChange","showPreview","setShowPreview","handleProceed","resposne","setResponse","handleSubmit","preventDefault","myuser","myemail","reciever_email","payload","email_address","greeting","template_id","product_id","responder_name","body","toast","sendisLoading","setsendisLoading","handleEmailSend","received_message","snippet","reply_to","fromField1","match1","formData","responder_mail","startDate","setStartDate","endDate","setEndDate","showSearch","setShowSearch","searchTerm","setSearchTerm","isFilterActive","setIsFilterActive","isDateFilterActive","setIsDateFilterActive","filteredMails","mail","mailDate","Date","startOfDay","setHours","endOfDay","isDateFiltered","lowerCaseSearchTerm","toLowerCase","isSearchTermInSnippet","includes","isSearchTermInFrom","From","isSearchFiltered","showInputs","setShowInputs","sortDirection","setSortDirection","toggleSort","newSortDirection","currentMails","sort","a","b","dateA","dateB","toggleSearchInput","toggleInputs","selectedMailId","setSelectedMailId","handleSelectMail","mailId","selectGreetingBasedOnTime","hours","getHours","team","setTeam","selectedAssignId","setSelectedAssignId","assignSuccess","handleAssignChange","selectedOption","selectedId","fetch","method","stringify","team_id","message_id","json","ok","Error","filterAssign","assignedMessageIds","item","selectedMemberId","setSelectedMemberId","handleMemberChange","filterMember","memberId","assignedData","expandedMailId","setExpandedMailId","handleToggleDetails","options","member","label","user_name","options1","user_email","customStyles1","control","styles","backgroundColor","color","customStyles","boxShadow","singleValue","placeholder","input","dropdownIndicator","noOptionsMessage","menu","setProfile","toggleFilter","clearDateFilter","clearFilter","activeIcon","setActiveIcon","handleIconClick","iconName","toggleSortDirection","iconStyle","fontSize","cursor","padding","borderRadius","border","marginLeft","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","background","marginTop","maxHeight","overflowY","width","selected","onClick","src","alt","alignItems","position","flex","length","isClearable","onChange","isSearchable","type","toISOString","substring","index","_mail$detail","_mail$detail$headers","to","height","split","Subject","classNamePrefix","defaultValue","disabled","template_name","collection","whiteSpace","dangerouslySetInnerHTML","__html","display","justifyContent","marginBottom","marginRight","onSubmit","textAlign","paddingTop","paddingBottom","_c","$RefreshReg$"],"sources":["D:/Shoaib dev/Rolex/frontend-rolex/src/Pages/User/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./../../Components/Header\";\r\nimport Sidebar from \"./../../Components/Sidebar\";\r\nimport Footer from \"./../../Components/Sidebar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport BtnSpinner from \"./../../Components/BtnSpinner\";\r\nimport Helpers from \"./../../Config/Helpers\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport { useGoogleLogin, GoogleOAuthProvider } from \"@react-oauth/google\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Template from \"./Template\";\r\nimport Send from \"./Send\";\r\nimport LocationSlider from \"../Admin/Components/LocationSlider\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport default function Home() {\r\n  useEffect(() => {\r\n    document.title = \"Home - Crownsync AI\";\r\n    // Optionally, set meta description or any other head elements here\r\n    return () => {\r\n      // This is where you can reset or change the title when the component unmounts if necessary\r\n      document.title = \"Crownsync Ai\";\r\n    };\r\n  }, []);\r\n  const [inputs, setInputs] = useState({});\r\n  const [googleLoading, setGoogleLoading] = useState(false);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [mails, setMails] = useState([]);\r\n  const [isGoogle, setIsGoogle] = useState(null);\r\n  const [userNotFound, setUserNotFound] = useState(false);\r\n\r\n  // location silder\r\n  useEffect(() => {\r\n    const fetchDetail = async () => {\r\n      const url = Helpers.apiUrl;\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      try {\r\n        const response = await axios.get(`${url}check-login`, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (response.status === 200 && response.data.data) {\r\n          // console.log(\"my response:\", response.data.data.contact);\r\n          setIsGoogle(response.data.data);\r\n          setUserNotFound(false);\r\n        } else {\r\n          // If the data is empty or null which should ideally not occur in this branch\r\n          setIsGoogle(null);\r\n          setUserNotFound(true);\r\n        }\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 404) {\r\n          // Handle user not found\r\n          setUserNotFound(true);\r\n          setIsGoogle(null);\r\n        } else {\r\n          // Handle other errors\r\n          console.error(\"Error fetching details:\", error);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchDetail();\r\n  }, []);\r\n\r\n  // const [authorized, setAuthorized] = useState(false);\r\n  const baseUrl = Helpers.apiUrl;\r\n  const navigate = useNavigate();\r\n  const loginWithGoogle = useGoogleLogin({\r\n    scope:\r\n      \"https://www.googleapis.com/auth/userinfo.email https://mail.google.com/\",\r\n    onSuccess: async (tokenResponse) => {\r\n      setIsLoading(true);\r\n      // setGoogleLoading(true);\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        // console.log(\"Tokeeenene\", token);\r\n        // console.log(\"google\", tokenResponse.access_token);\r\n        let data = { usertoken: tokenResponse.access_token, token: token };\r\n        // console.log(\"rfde\", data);\r\n        // let data = { usertoken : tokenResponse.access_token };\r\n        // let data = { usertoken : token };\r\n        // Adding await here to wait for the request to complete\r\n        const response = await axios.post(`${baseUrl}auth/google`, data, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          // Helpers.setItem(\"user\", response.data.user, true);\r\n          // Helpers.setItem(\"token\", response.data.token);\r\n          // console.log(response.data.user);\r\n\r\n          // window.location.href = \"/user/dashboard\";\r\n          // navigate(\"/user/dashboard\");\r\n          window.location.reload();\r\n          setIsAuthenticated(true);\r\n        } else {\r\n          console.log(\"Received non-200 response:\", response.status);\r\n        }\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n        setGoogleLoading(false);\r\n        if (error.response) {\r\n          console.error(\"Error data:\", error.response.data);\r\n          console.error(\"Error status:\", error.response.status);\r\n        } else if (error.request) {\r\n          console.error(\"No response received:\", error.request);\r\n        } else {\r\n          console.error(\"Error message:\", error.message);\r\n        }\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Login with Google error:\", error);\r\n      setIsLoading(false);\r\n      setGoogleLoading(false);\r\n    },\r\n  });\r\n\r\n  const fetchData = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const baseUrl = Helpers.apiUrl;\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await axios.get(`${baseUrl}email-messages`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const emails = response.data.data.map((email) => {\r\n          try {\r\n            // Assuming email.detail is a JSON string that needs parsing\r\n            return { ...email, detail: JSON.parse(email.detail) };\r\n          } catch (e) {\r\n            console.error(\r\n              \"Failed to parse email detail for email with ID:\",\r\n              email.id\r\n            );\r\n            return { ...email, detail: {} }; // Provide empty detail in case of parsing failure\r\n          }\r\n        });\r\n        setMails(emails);\r\n        setAssignSuccess(false);\r\n      } else {\r\n        console.log(\"Received non-200 response:\", response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n      if (error.response && error.response.status === 401) {\r\n        setIsAuthenticated(false); // Assuming you meant to set false here\r\n      } else {\r\n        setIsAuthenticated(true); // You can decide the correct logic\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // useEffect to call fetchData on component mount\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  // const emails = JSON.parse(mails.detail);\r\n  // Empty dependency array means this effect runs once after the initial render\r\n  const userJson = localStorage.getItem(\"user\");\r\n\r\n  // Parse the JSON string to an object\r\n  const user = JSON.parse(userJson);\r\n\r\n  // Access the email property of the user object\r\n  const userEmail = user ? user.email : null;\r\n\r\n  // console.log(userEmail);\r\n\r\n  //\r\n\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [collection_id, setCollection] = useState(\"\");\r\n  // const [templateid, setCollection] = useState(\"\");\r\n  // const [templates, setTemplate] = useState(null);\r\n  const [emailData, setEmailData] = useState(null);\r\n  let { messageId } = useParams();\r\n  // console.log(messageId);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const baseUrl = Helpers.apiUrl;\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        // Fetch all email messages\r\n        const response = await axios.get(`${baseUrl}email-messages`, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          const emails = response.data.data.map((email) => {\r\n            try {\r\n              // Assuming email.detail is a JSON string that needs parsing\r\n              return { ...email, detail: JSON.parse(email.detail) };\r\n            } catch (e) {\r\n              console.error(\r\n                \"Failed to parse email detail for email with ID:\",\r\n                email.id,\r\n                e\r\n              );\r\n              return { ...email, detail: {} }; // Provide empty detail in case of parsing failure\r\n            }\r\n          });\r\n\r\n          // Filter the email messages locally based on messageId\r\n          const emailMessage = emails.find(\r\n            (email) =>\r\n              email.detail.headers &&\r\n              email.detail.headers[\"Message-ID\"] === messageId\r\n          );\r\n          if (emailMessage) {\r\n            setEmailData(emailMessage);\r\n            // console.log(\"Email data:\", emailMessage);\r\n          } else {\r\n            console.log(\"Email with messageId not found.\");\r\n          }\r\n        } else {\r\n          console.log(\"Received non-200 response:\", response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"An error occurred:\", error);\r\n        // Handle error\r\n        if (error.response) {\r\n          // Server responded with a status code outside 2xx range\r\n          console.error(\"Error data:\", error.response.data);\r\n          console.error(\"Error status:\", error.response.status);\r\n        } else if (error.request) {\r\n          // No response was received to the request\r\n          console.error(\"No response received:\", error.request);\r\n        } else {\r\n          // An error occurred in setting up the request\r\n          console.error(\"Error message:\", error.message);\r\n        }\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [messageId]); // Fetch data whenever messageId changes\r\n  const [templates, setTemplates] = useState([]);\r\n  const [selectedTemplateId, setSelectedTemplateId] = useState(null);\r\n  const [finalTemplate, setFinalTemplate] = useState(\"\");\r\n  // const [isLoading, setIsLoading] = useState(false); // Ensure you have this state defined if you're using it\r\n\r\n  // Fetch templates from the API\r\n\r\n  const handleTemplateChange = (event) => {\r\n    setSelectedTemplateId(event.target.value);\r\n  };\r\n\r\n  // Correctly find the selected template using the updated selectedTemplateId state\r\n  const selectedTemplate = templates.find(\r\n    (template) => String(template.id) === String(selectedTemplateId)\r\n  );\r\n\r\n  const [products, setProducts] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const baseUrl = Helpers.apiUrl;\r\n        const token = localStorage.getItem(\"token\");\r\n        // const data = {}; // Your request payload\r\n        // Retrieve token if needed\r\n        // console.log(\"token\", token);\r\n        const response = await axios.get(`${baseUrl}rolex_models`, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        // console.log(\"response\", response.data.data);\r\n\r\n        if (response.status === 200) {\r\n          // console.log(response.data.user);\r\n          // Assuming you want to store the emails in state\r\n          // console.log(response.data);\r\n          setProducts(response.data.data);\r\n\r\n          // Redirect or perform further actions\r\n        } else {\r\n          console.log(\"Received non-200 response:\", response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"An error occurred:\", error);\r\n        // Handle error\r\n        if (error.response) {\r\n          // Server responded with a status code outside 2xx range\r\n          console.error(\"Error data:\", error.response.data);\r\n          console.error(\"Error status:\", error.response.status);\r\n        } else if (error.request) {\r\n          // No response was received to the request\r\n          console.error(\"No response received:\", error.request);\r\n        } else {\r\n          // An error occurred in setting up the request\r\n          console.error(\"Error message:\", error.message);\r\n        }\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // Empty dependency array means this effect runs once after the initial render\r\n\r\n  // const userJson = localStorage.getItem(\"user\");\r\n\r\n  // // Parse the JSON string to an object\r\n  // const user = JSON.parse(userJson);\r\n\r\n  // // Access the email property of the user object\r\n  // const userEmail = user ? user.name : null;\r\n\r\n  // console.log(userEmail);\r\n\r\n  //location\r\n\r\n\r\n  const [collections, setCollections] = useState([]);\r\n  const [allProducts, setAllProducts] = useState([]);\r\n  const [selectedCollectionId, setSelectedCollectionId] = useState(\"\");\r\n  const [selectedProductId, setSelectedProductId] = useState(\"\");\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCollections = async () => {\r\n      const baseUrl = Helpers.apiUrl; // Replace with your actual API URL\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      try {\r\n        const response = await axios.get(`${baseUrl}collects`, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          setCollections(response.data.data);\r\n        } else {\r\n          console.error(\"Received non-200 response:\", response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"An error occurred:\", error);\r\n        handleAPIError(error);\r\n      }\r\n    };\r\n\r\n    const fetchProducts = async () => {\r\n      const baseUrl = Helpers.apiUrl; // Replace with your actual API URL\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      try {\r\n        const response = await axios.get(`${baseUrl}rolex_models`, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          setAllProducts(response.data.data);\r\n        } else {\r\n          console.error(\"Received non-200 response:\", response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"An error occurred:\", error);\r\n        handleAPIError(error);\r\n      }\r\n    };\r\n\r\n    fetchCollections();\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCollectionId) {\r\n      const filtered = allProducts.filter(\r\n        (product) =>\r\n          String(product.collection_id) === String(selectedCollectionId)\r\n      );\r\n      setFilteredProducts(filtered);\r\n    } else {\r\n      setFilteredProducts([]);\r\n    }\r\n  }, [selectedCollectionId, allProducts]);\r\n\r\n  const handleSelectionChange = (event) => {\r\n    setSelectedCollectionId(event.target.value);\r\n    setSelectedProductId(\"\"); // Reset the product selection\r\n  };\r\n\r\n  const handleProductChange = (event) => {\r\n    setSelectedProductId(event.target.value);\r\n  };\r\n\r\n  const handleAPIError = (error) => {\r\n    if (error.response) {\r\n      console.error(\"Error data:\", error.response.data);\r\n      console.error(\"Error status:\", error.response.status);\r\n    } else if (error.request) {\r\n      console.error(\"No response received:\", error.request);\r\n    } else {\r\n      console.error(\"Error message:\", error.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // console.log(\"Selected Collection ID:\", selectedCollectionId);\r\n    // console.log(\"All Products:\", allProducts);\r\n\r\n    const filtered = allProducts.filter((product) => {\r\n      const productCollectionId = String(product.collection_id);\r\n      const isSelectedCollectionId = String(selectedCollectionId);\r\n      // console.log(\r\n      //   \"Comparing:\",\r\n      //   productCollectionId,\r\n      //   \"with\",\r\n      //   isSelectedCollectionId\r\n      // );\r\n      return productCollectionId === isSelectedCollectionId;\r\n    });\r\n\r\n    // console.log(\"Filtered Products:\", filtered);\r\n    setFilteredProducts(filtered);\r\n  }, [selectedCollectionId, allProducts]);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  useEffect(() => {\r\n    // console.log(\"Selected Product ID:\", selectedProductId);\r\n    // console.log(\"Filtered Products:\", filteredProducts);\r\n    const product = filteredProducts.find(\r\n      (p) => String(p.id) === String(selectedProductId)\r\n    );\r\n    // console.log(\"Selected Product:\", product);\r\n    setSelectedProduct(product);\r\n  }, [selectedProductId, filteredProducts]);\r\n\r\n  const getTemplates = async () => {\r\n    const baseUrl = Helpers.apiUrl;\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await axios.get(`${baseUrl}admin/mail_templates`, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    if (response.status === 200) {\r\n      setTemplates(response.data.data);\r\n    }\r\n  };\r\n\r\n  const updateTemplate = () => {\r\n    if (selectedTemplateId) {\r\n      let templateToUpdate = templates.find(\r\n        (temp) => temp.id == selectedTemplateId\r\n      );\r\n      // console.log(templateToUpdate, selectedTemplateId);\r\n      const username = localStorage.getItem(\"user\");\r\n      const user = JSON.parse(username);\r\n      const userName = user ? user.name : \"Customer\";\r\n      const modelName =\r\n        selectedProduct && selectedProduct.name ? selectedProduct.name : \"[]\";\r\n      const modelPrice =\r\n        selectedProduct && selectedProduct.price ? selectedProduct.price : \"[]\";\r\n      const modelStock =\r\n        selectedProduct && selectedProduct.stock ? selectedProduct.stock : \"[]\";\r\n      const modelLink =\r\n        selectedProduct && selectedProduct.link ? selectedProduct.link : \"[]\";\r\n      const modelFeature =\r\n        selectedProduct && selectedProduct.features\r\n          ? selectedProduct.features\r\n          : \"[]\";\r\n      const modelStore =\r\n        selectedProduct && selectedProduct.store ? selectedProduct.store : \"[]\";\r\n      const modelLocation =\r\n        selectedProduct && selectedProduct.location\r\n          ? selectedProduct.location\r\n          : \"[]\";\r\n      const modelBenefit =\r\n        selectedProduct && selectedProduct.benefits\r\n          ? selectedProduct.benefits\r\n          : \"[]\";\r\n      const mycollection =\r\n        selectedProduct && selectedProduct.collection_id\r\n          ? selectedProduct.collection_name\r\n          : \"[]\";\r\n      const imageHtml =\r\n        selectedProduct && selectedProduct.image\r\n          ? `<img src=\"${Helpers.basePath}/assets/${selectedProduct.image}\" alt=\"${selectedProduct.name}\" style=\"max-width: 100%; height: 200px; align-items: center;text-align:center;display:flex;justify-content:center;margin-left:10%\" />`\r\n          : \"[]\";\r\n      const fromField = emailData.detail.headers[\"From\"];\r\n      const match = fromField.match(/^(.*?)\\s*<(.*)>$/);\r\n      const reciever_name = match ? match[1] : \"\";\r\n      const sender_email = isGoogle ? isGoogle.contact : \"\";\r\n      const sender_phone = profile ? profile.phone : \"\";\r\n      const sender_address = profile ? profile.address : \"\";\r\n      const greetingUpdated = templateToUpdate.heading\r\n        .replace(/\\[SenderName\\]/gi, userName)\r\n        .replace(/\\[ReceiverName\\]/gi, reciever_name)\r\n        .replace(/\\[Model\\]/gi, modelName)\r\n        .replace(/\\[Price\\]/gi, modelPrice)\r\n        .replace(/\\[Stock\\]/gi, modelStock)\r\n        .replace(/\\[Link\\]/gi, modelLink)\r\n        .replace(/\\[Features\\]/gi, modelFeature)\r\n        .replace(/\\[Store\\]/gi, modelStore)\r\n        .replace(/\\[Location\\]/gi, modelLocation)\r\n        .replace(/\\[Benefits\\]/gi, modelBenefit)\r\n        .replace(/\\[SenderEmail\\]/gi, sender_email)\r\n        .replace(/\\[SenderPhone\\]/gi, sender_phone)\r\n        .replace(/\\[SenderAddress\\]/gi, sender_address)\r\n        .replace(/\\[Collection\\]/gi, mycollection)\r\n        .replace(/\\[Image\\]/gi, imageHtml);\r\n      setFinalTemplate(greetingUpdated);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateTemplate();\r\n  }, [selectedProductId, emailData, selectedTemplate, selectedCollectionId]);\r\n\r\n  useEffect(() => {\r\n    getTemplates();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      // console.log(\"Called\");\r\n      const username = localStorage.getItem(\"user\");\r\n      const user = JSON.parse(username);\r\n      const userName = user ? user.name : \"Customer\";\r\n      setIsLoading(true);\r\n      try {\r\n        const baseUrl = Helpers.apiUrl;\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        const response = await axios.get(`${baseUrl}admin/mail_templates`, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        // This would be \"GitHub\"\r\n        // console.log(\"asdafgsdbfvxxcbv:\", response);\r\n        const modelName =\r\n          selectedProduct && selectedProduct.name ? selectedProduct.name : \"[]\";\r\n        const modelPrice =\r\n          selectedProduct && selectedProduct.price\r\n            ? selectedProduct.price\r\n            : \"[]\";\r\n        const modelStock =\r\n          selectedProduct && selectedProduct.stock\r\n            ? selectedProduct.stock\r\n            : \"[]\";\r\n        const modelLink =\r\n          selectedProduct && selectedProduct.link ? selectedProduct.link : \"[]\";\r\n        const modelFeature =\r\n          selectedProduct && selectedProduct.features\r\n            ? selectedProduct.features\r\n            : \"[]\";\r\n        const modelStore =\r\n          selectedProduct && selectedProduct.store\r\n            ? selectedProduct.store\r\n            : \"[]\";\r\n        const modelLocation =\r\n          selectedProduct && selectedProduct.location\r\n            ? selectedProduct.location\r\n            : \"[]\";\r\n        const modelBenefit =\r\n          selectedProduct && selectedProduct.benefits\r\n            ? selectedProduct.benefits\r\n            : \"[]\";\r\n        const mycollection =\r\n          selectedProduct && selectedProduct.collection_id\r\n            ? selectedProduct.collection_name\r\n            : \"[]\";\r\n        // console.log(\"asdfcxe\", mycollection);\r\n        const imageHtml =\r\n          selectedProduct && selectedProduct.image\r\n            ? `<img src=\"${Helpers.basePath}/assets/${selectedProduct.image}\" alt=\"${selectedProduct.name}\" style=\"max-width: 100%; height: 200px; align-items: center;text-align:center;display:flex;justify-content:center;margin-left:10%\" />`\r\n            : \"[]\";\r\n        const fromField = emailData.detail.headers[\"From\"];\r\n        const match = fromField.match(/^(.*?)\\s*<(.*)>$/);\r\n        const reciever_name = match ? match[1] : \"\";\r\n        const sender_email = isGoogle ? isGoogle.contact : \"\";\r\n        const sender_phone = profile ? profile.phone : \"\";\r\n        const sender_address = profile ? profile.address : \"\";\r\n        if (response.status === 200) {\r\n          const modifiedTemplates = response.data.data.map((template) => {\r\n            const greetingUpdated = template.heading\r\n              .replace(/\\[SenderName\\]/gi, userName)\r\n              .replace(/\\[ReceiverName\\]/gi, reciever_name)\r\n              .replace(/\\[Model\\]/gi, modelName)\r\n              .replace(/\\[Price\\]/gi, modelPrice)\r\n              .replace(/\\[Stock\\]/gi, modelStock)\r\n              .replace(/\\[Link\\]/gi, modelLink)\r\n              .replace(/\\[Features\\]/gi, modelFeature)\r\n              .replace(/\\[Store\\]/gi, modelStore)\r\n              .replace(/\\[Location\\]/gi, modelLocation)\r\n              .replace(/\\[Benefits\\]/gi, modelBenefit)\r\n              .replace(/\\[SenderEmail\\]/gi, sender_email)\r\n              .replace(/\\[SenderPhone\\]/gi, sender_phone)\r\n              .replace(/\\[SenderAddress\\]/gi, sender_address)\r\n              .replace(/\\[Collection\\]/gi, mycollection)\r\n              .replace(/\\[Image\\]/gi, imageHtml);\r\n            return {\r\n              ...template,\r\n              heading: greetingUpdated,\r\n            };\r\n          });\r\n          setTemplates(modifiedTemplates);\r\n        } else {\r\n          // console.log(\"Received non-200 response:\", response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"An error occurred:\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    // fetchData();\r\n  }, [selectedProductId, emailData, selectedTemplate, selectedCollectionId]);\r\n\r\n  // const [selectedCollectionId, setSelectedCollectionId] = useState(\"\");\r\n  // const [selectedProductId, setSelectedProductId] = useState(\"\");\r\n\r\n  // // Handle change in selection\r\n  // const handleSelectionChange = (event) => {\r\n  //   setSelectedCollectionId(event.target.value);\r\n  //   console.log(selectedCollectionId);\r\n  // };\r\n\r\n  // const handleProductChange = (event) => {\r\n  //   setSelectedProductId(event.target.value);\r\n  // };\r\n  // // Find the selected product based on selectedProductId\r\n  // // Ensure products is an array before calling .find\r\n  // const selectedProduct = products?.find(\r\n  //   (product) => String(product.id) === String(selectedProductId)\r\n  // );\r\n  // const selectedTemplates = templates?.find(\r\n  //   (template) => String(template.id) === String(setSelectedTemplateId)\r\n  // );\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     setIsLoading(true);\r\n  //     try {\r\n  //       const baseUrl = Helpers.apiUrl;\r\n  //       // const data = {}; // Your request payload\r\n  //       // Retrieve token if needed\r\n  //       const token = localStorage.getItem(\"token\");\r\n  //       console.log(\"token\", token);\r\n  //       const response = await axios.get(`${baseUrl}collects`, {\r\n  //         headers: {\r\n  //           Accept: \"application/json\",\r\n  //           \"Content-Type\": \"application/json\",\r\n  //           Authorization: `Bearer ${token}`,\r\n  //         },\r\n  //       });\r\n\r\n  //       console.log(\"response\", response.data.data);\r\n\r\n  //       if (response.status === 200) {\r\n  //         // console.log(response.data.user);\r\n  //         // Assuming you want to store the emails in state\r\n  //         setCollection(response.data.data);\r\n\r\n  //         // Redirect or perform further actions\r\n  //         console.log(response.data);\r\n  //       } else {\r\n  //         console.log(\"Received non-200 response:\", response.status);\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.error(\"An error occurred:\", error);\r\n  //       // Handle error\r\n  //       if (error.response) {\r\n  //         // Server responded with a status code outside 2xx range\r\n  //         console.error(\"Error data:\", error.response.data);\r\n  //         console.error(\"Error status:\", error.response.status);\r\n  //       } else if (error.request) {\r\n  //         // No response was received to the request\r\n  //         console.error(\"No response received:\", error.request);\r\n  //       } else {\r\n  //         // An error occurred in setting up the request\r\n  //         console.error(\"Error message:\", error.message);\r\n  //       }\r\n  //     } finally {\r\n  //       setIsLoading(false);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchData();\r\n  // }, []); // Empty dependency array means this effect runs once after the initial render\r\n\r\n  // For passing data in email preview section\r\n  const [selectedGreetingText, setSelectedGreetingText] = useState(\"\");\r\n\r\n  const handleGreetingButton = (greetingText) => {\r\n    setSelectedGreetingText(greetingText);\r\n    console.log(greetingText); // Now this directly logs the greetings text\r\n  };\r\n\r\n  // For passing location Id\r\n  const [locationId, setLocationId] = useState(null);\r\n\r\n  const handleLocationButton = (location) => {\r\n    setLocationId(location);\r\n  };\r\n  const locations = [\"New York\", \"Los Angeles\", \"Chicago\",\"Pakistan\",\"Poland\"]; // Add more locations as needed\r\n  const sliderSettings = {\r\n    dots: true,\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 3,\r\n    initialSlide: 0,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3,\r\n          infinite: true,\r\n          dots: true\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n          initialSlide: 2\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1\r\n        }\r\n      }\r\n    ]\r\n  };\r\n  useEffect(() => {\r\n    console.log(locationId,'location id');\r\n  }, [locationId]);\r\n\r\n  const [stock, setStock] = useState(\"\");\r\n  const handleStockChange = (status) => {\r\n    setStock(status);\r\n    // console.log(stock);\r\n  };\r\n  // console.log(\"SELECTED MAIL\", emailData);\r\n  const [showPreview, setShowPreview] = useState(false); // New state for toggling the preview\r\n  const handleProceed = () => {\r\n    // Toggle the visibility of the email preview section\r\n    setShowPreview(true);\r\n    // console.log(showPreview);\r\n  };\r\n  const [resposne, setResponse] = useState(\"\");\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const baseUrl = Helpers.apiUrl;\r\n    const token = localStorage.getItem(\"token\");\r\n    const username = localStorage.getItem(\"user\");\r\n    const user = JSON.parse(username);\r\n\r\n    const myuser = user ? user.name : null;\r\n    const myemail = user ? user.email : null;\r\n\r\n    // console.log(\"Usernaem\", myuser);\r\n    // console.log(\"SELECTED MAIL\", emailData);\r\n    const fromField = emailData.detail.headers[\"From\"];\r\n    const match = fromField.match(/^(.*?)\\s*<(.*)>$/);\r\n    const reciever_name = match ? match[1] : \"\"; // This would be \"GitHub\"\r\n    // console.log(reciever_name);\r\n    const reciever_email = match ? match[2] : fromField;\r\n    // console.log(reciever_email);\r\n    const payload = {\r\n      email_address: myemail,\r\n      greeting: selectedGreetingText,\r\n      reciever_name,\r\n      reciever_email,\r\n      template_id: selectedTemplateId,\r\n      product_id: selectedProductId,\r\n      responder_name: myuser,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(`${baseUrl}email-preview`, payload, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // console.log(\"Response data:\", response.data);\r\n        // console.log(\"Body:\", response.data.body);\r\n        setResponse(response.data.body);\r\n        Helpers.toast(\"success\", \"Operation Successful\");\r\n      } else {\r\n        console.log(\r\n          \"Operation not successful, response status:\",\r\n          response.status\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  };\r\n  const [sendisLoading, setsendisLoading] = useState(false);\r\n  const handleEmailSend = async (e) => {\r\n    e.preventDefault();\r\n    setsendisLoading(true);\r\n    const baseUrl = Helpers.apiUrl;\r\n    const token = localStorage.getItem(\"token\");\r\n    const fromField = emailData.detail.headers[\"From\"];\r\n    const received_message = emailData.detail.snippet;\r\n    const match = fromField.match(/^(.*?)\\s*<(.*)>$/);\r\n    const reply_to = match ? match[2] : fromField;\r\n    const fromField1 = emailData.detail.headers[\"From\"];\r\n    const match1 = fromField1.match(/^(.*?)\\s*<(.*)>$/);\r\n    const reciever_name = match1 ? match1[1] : \"\"; // This would be \"GitHub\"\r\n    // console.log(\"asdfvcxyh\", reciever_name);\r\n    const reciever_email = match ? match[2] : fromField1;\r\n    // console.log(reciever_email);\r\n\r\n    const formData = {\r\n      template_id: selectedTemplateId,\r\n      product_id: selectedProductId,\r\n      greeting: selectedGreetingText,\r\n      response: resposne, // You need to define what this response should be.\r\n      reply_to: reply_to,\r\n      received_message: received_message,\r\n      responder_name: profile.name,\r\n      responder_mail: isGoogle.contact,\r\n      sender_phone: profile.phone,\r\n      sender_address: profile.address,\r\n      reciever_name: reciever_name,\r\n      reciever_email: reciever_email,\r\n    };\r\n    try {\r\n      const response = await axios.post(\r\n        `${baseUrl}gmail/send-email`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        // console.log(\"reponseemail\", response.data);\r\n        Helpers.toast(\"success\", response.data.message);\r\n      } else {\r\n        console.log(\"Not sending mail\");\r\n        Helpers.toast(\"error\", \"Error in Sending Mail \");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error in Sending Mail \", error);\r\n      Helpers.toast(\"error\", \"Error in Sending Mail \");\r\n    } finally {\r\n      setsendisLoading(false); // Ensure isLoading is set to false in finally block\r\n    }\r\n  };\r\n\r\n  /// Filters\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [showSearch, setShowSearch] = useState(false); // Search input hidden by default\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isFilterActive, setIsFilterActive] = useState(false);\r\n  const [isDateFilterActive, setIsDateFilterActive] = useState(false);\r\n\r\n  // const filteredMails = mails\r\n  //   .filter((mail) => {\r\n  //     // const mailDate = new Date(mail.detail.headers.Date);\r\n  //     // return (\r\n  //     //   (!startDate || mailDate >= startDate) &&\r\n  //     //   (!endDate || mailDate <= endDate)\r\n  //     // );\r\n  //     const mailDate = new Date(mail.detail.headers.Date);\r\n\r\n  //     // Ensure we're comparing only the date parts if times are not important\r\n  //     const startOfDay = startDate\r\n  //       ? new Date(new Date(startDate).setHours(0, 0, 0, 0))\r\n  //       : null;\r\n  //     const endOfDay = endDate\r\n  //       ? new Date(new Date(endDate).setHours(23, 59, 59, 999))\r\n  //       : null;\r\n  //     return (\r\n  //       (!startOfDay || mailDate >= startOfDay) &&\r\n  //       (!endOfDay || mailDate <= endOfDay)\r\n  //     );\r\n  //   })\r\n  //   .filter((mail) => {\r\n  //     const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n\r\n  //     // Check if the search term is present anywhere in the snippet\r\n  //     const isSearchTermInSnippet = mail.detail.snippet\r\n  //       .toLowerCase()\r\n  //       .includes(lowerCaseSearchTerm);\r\n\r\n  //     // Optionally, check if the search term is present in the 'From' field\r\n  //     const isSearchTermInFrom =\r\n  //       mail.detail.headers.From.toLowerCase().includes(lowerCaseSearchTerm);\r\n\r\n  //     // Return true if search term is found in either the snippet or 'From' field\r\n  //     return isSearchTermInSnippet || isSearchTermInFrom; // Use OR to combine if finding in either is sufficient\r\n  //   });\r\n  const filteredMails = mails\r\n    .filter((mail) => {\r\n      const mailDate = new Date(mail.detail.headers.Date);\r\n      const startOfDay = startDate\r\n        ? new Date(new Date(startDate).setHours(0, 0, 0, 0))\r\n        : null;\r\n      const endOfDay = endDate\r\n        ? new Date(new Date(endDate).setHours(23, 59, 59, 999))\r\n        : null;\r\n\r\n      const isDateFiltered =\r\n        !startOfDay ||\r\n        (mailDate >= startOfDay && (!endOfDay || mailDate <= endOfDay));\r\n      return isDateFiltered;\r\n    })\r\n    .filter((mail) => {\r\n      const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n      const isSearchTermInSnippet = mail.detail.snippet\r\n        .toLowerCase()\r\n        .includes(lowerCaseSearchTerm);\r\n      const isSearchTermInFrom =\r\n        mail.detail.headers.From.toLowerCase().includes(lowerCaseSearchTerm);\r\n\r\n      const isSearchFiltered = isSearchTermInSnippet || isSearchTermInFrom;\r\n      return isSearchFiltered;\r\n    });\r\n\r\n  // Update isFilterActive based on filters applied\r\n  useEffect(() => {\r\n    setIsDateFilterActive(\r\n      startDate !== null || endDate !== null || searchTerm !== \"\"\r\n    );\r\n  }, [startDate, endDate, searchTerm]);\r\n\r\n  const [showInputs, setShowInputs] = useState(false);\r\n  const [sortDirection, setSortDirection] = useState(\"desc\"); // or 'desc' for default descending\r\n  const toggleSort = () => {\r\n    // Assuming the initial sortDirection state is \"desc\"\r\n    const newSortDirection = sortDirection === \"asc\" ? \"desc\" : \"asc\";\r\n    setSortDirection(newSortDirection);\r\n\r\n    // Perform sorting\r\n    setMails((currentMails) => {\r\n      return [...currentMails].sort((a, b) => {\r\n        const dateA = new Date(a.detail.headers.Date);\r\n        const dateB = new Date(b.detail.headers.Date);\r\n        return newSortDirection === \"asc\" ? dateA - dateB : dateB - dateA;\r\n      });\r\n    });\r\n  };\r\n\r\n  const toggleSearchInput = () => {\r\n    setShowSearch(!showSearch); // Toggle the current state of the search input\r\n    if (showInputs) {\r\n      // If the date inputs are currently shown, hide them\r\n      setShowInputs(false);\r\n    }\r\n  };\r\n\r\n  const toggleInputs = () => {\r\n    setShowInputs(!showInputs); // Toggle the current state of the date inputs\r\n    if (showSearch) {\r\n      // If the search input is currently shown, hide it\r\n      setShowSearch(false);\r\n    }\r\n  };\r\n  const [selectedMailId, setSelectedMailId] = useState(null);\r\n  const handleSelectMail = (mailId) => {\r\n    setSelectedMailId(mailId);\r\n  };\r\n  const selectGreetingBasedOnTime = () => {\r\n    const hours = new Date().getHours();\r\n    let greeting;\r\n    if (hours < 12) {\r\n      greeting = \"Good Morning\";\r\n    } else if (hours >= 12 && hours <= 17) {\r\n      greeting = \"Good Afternoon\";\r\n    } else {\r\n      greeting = \"Good Evening\";\r\n    }\r\n    setSelectedGreetingText(greeting);\r\n  };\r\n  useEffect(() => {\r\n    selectGreetingBasedOnTime();\r\n  }, []); // The empty array ensures this effect runs once on mount\r\n  const [team, setTeam] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        // console.log(token);\r\n        const url = Helpers.apiUrl; // Confirm this points to your API\r\n        const response = await axios.get(`${url}getuserlist`, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        if (response.status === 200) {\r\n          // Assuming response.data.data is an array of user objects\r\n          setTeam(response.data.data); // Directly set the array of user objects to state\r\n        } else {\r\n          console.log(\"Error in getting user list\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  const [selectedAssignId, setSelectedAssignId] = useState(\"\");\r\n  const [assignSuccess, setAssignSuccess] = useState(false);\r\n\r\n  const handleAssignChange = async (selectedOption) => {\r\n    const selectedId = selectedOption ? selectedOption.value : \"\";\r\n\r\n    setSelectedAssignId(selectedId);\r\n\r\n    if (!selectedId) return; // Early return if no selection\r\n\r\n    const url = Helpers.apiUrl;\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    try {\r\n      const response = await fetch(`${url}assignuser`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          team_id: selectedId,\r\n          message_id: messageId,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        Helpers.toast(\"success\", \"Assigned successfully\");\r\n        // You might want to update state or show a success message to the user\r\n      } else {\r\n        // Use the error message from the server if available, otherwise a default error message\r\n        throw new Error(data.error || \"Failed to assign email\");\r\n      }\r\n    } catch (error) {\r\n      // Handle errors that occur during fetching or in response handling\r\n      // Displaying error messages using toast notifications\r\n      Helpers.toast(\"error\", error.message || \"An error occurred\");\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  // const handleAssignChange = (event) => {\r\n  //   setSelectedAssignId(event.target.value);\r\n  // };\r\n  const filterAssign = async () => {\r\n    const url = Helpers.apiUrl;\r\n    const token = localStorage.getItem(\"token\");\r\n    try {\r\n      const response = await axios.get(`${url}getassignuser`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // console.log(response.data); // Log response data\r\n      // Assuming your state variable for message IDs is called 'assignedMessageIds'\r\n      const assignedMessageIds = response.data.data.map(\r\n        (item) => item.message_id\r\n      );\r\n      // Now, filter emails based on assigned message IDs\r\n      const filteredMails = mails.filter((mail) =>\r\n        assignedMessageIds.includes(mail.detail.headers[\"Message-ID\"])\r\n      );\r\n      setMails(filteredMails);\r\n      setAssignSuccess(true);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error); // Log error\r\n    }\r\n  };\r\n  const [selectedMemberId, setSelectedMemberId] = useState(\"\");\r\n  // const handleMemberChange = (event) => {\r\n  //   setSelectedMemberId(event.target.value);\r\n  //   filterMember(event.target.value);\r\n  // };\r\n\r\n  const handleMemberChange = (selectedOption) => {\r\n    if (selectedOption) {\r\n      // console.log(\"Selected Member ID:\", selectedOption.value);\r\n      setSelectedMemberId(selectedOption.value);\r\n      filterMember(selectedOption.value);\r\n    } else {\r\n      setSelectedMemberId(\"\"); // or handle deselecting differently if needed\r\n    }\r\n  };\r\n\r\n  // Function to filter emails based on selected member ID\r\n  const filterMember = async (memberId) => {\r\n    // console.log(\"Member ID:\", memberId); // Logging the member ID\r\n    const url = Helpers.apiUrl;\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    try {\r\n      const response = await axios.get(`${url}getassignuser`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      // console.log(\"Get assignResponse data:\", response.data); // Log the response data\r\n      if (response.status === 200) {\r\n        const assignedData = response.data.data;\r\n        // console.log(\"Assigned Data:\", assignedData); // Debugging log\r\n\r\n        // Filter to get assigned message IDs for the selected team ID\r\n        const assignedMessageIds = assignedData\r\n          .filter((item) => String(item.team_id) === String(memberId))\r\n          .map((item) => item.message_id);\r\n\r\n        // console.log(\"Assigned Message IDs:\", assignedMessageIds); // Log the filtered message IDs\r\n\r\n        // Filter the emails based on the assigned message IDs\r\n        const filteredMails = mails.filter((mail) =>\r\n          assignedMessageIds.includes(String(mail.detail.headers[\"Message-ID\"]))\r\n        );\r\n\r\n        // console.log(\"Filtered Mails:\", filteredMails); // Log the filtered mails\r\n        setMails(filteredMails); // Set the filtered mails\r\n        setAssignSuccess(true); // Indicate success\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setAssignSuccess(false); // Indicate an error occurred\r\n    }\r\n  };\r\n\r\n  const [expandedMailId, setExpandedMailId] = useState(null);\r\n\r\n  const handleToggleDetails = (mailId) => {\r\n    if (expandedMailId === mailId) {\r\n      setExpandedMailId(null);\r\n    } else {\r\n      setExpandedMailId(mailId); // Expand if not expanded\r\n      setSelectedMailId(mailId);\r\n    }\r\n  };\r\n  const options = team.map((member) => ({\r\n    value: member.id,\r\n    label: member.user_name,\r\n  }));\r\n  const options1 = team.map((member) => ({\r\n    value: member.id, // make sure this is correctly populated\r\n    label: member.user_email, // and this too\r\n  }));\r\n\r\n  const customStyles1 = {\r\n    control: (styles) => ({\r\n      ...styles,\r\n      backgroundColor: \"#D9D9D9B2\",\r\n      color: \"#ADADAD\",\r\n    }),\r\n  };\r\n  const customStyles = {\r\n    control: (styles) => ({\r\n      ...styles,\r\n      backgroundColor: \"#E2545E\",\r\n      color: \"white\",\r\n      boxShadow: \"none\",\r\n    }),\r\n    singleValue: (styles) => ({\r\n      ...styles,\r\n      color: \"white\", // affects the selected option label\r\n    }),\r\n    placeholder: (styles) => ({\r\n      ...styles,\r\n      color: \"white\", // This will change the placeholder text color\r\n    }),\r\n    input: (styles) => ({\r\n      ...styles,\r\n      color: \"white\", // This will change the text color as you type in the search input\r\n    }),\r\n    dropdownIndicator: (styles) => ({\r\n      ...styles,\r\n      color: \"white\", // Arrow icon color\r\n    }),\r\n    // option: (styles, { isFocused, isSelected }) => ({\r\n    //   ...styles,\r\n    //   backgroundColor: isFocused ? \"lightgray\" : isSelected ? \"gray\" : null,\r\n    //   color: isFocused || isSelected ? \"black\" : \"gray\", // Changing color conditionally based on focus\r\n    // }),\r\n    noOptionsMessage: (styles) => ({\r\n      ...styles,\r\n      color: \"white\", // No options available message color\r\n    }),\r\n    menu: (styles) => ({\r\n      ...styles,\r\n      backgroundColor: \"#E2545E\", // Dropdown background\r\n    }),\r\n  };\r\n  const [profile, setProfile] = useState(null);\r\n  useEffect(() => {\r\n    const fetchDetail = async () => {\r\n      try {\r\n        const url = Helpers.apiUrl;\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await axios.get(`${url}profile`, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        if (response.status === 200) {\r\n          // console.log(\"API Response:\", response.data.data.profile);\r\n          setProfile(response.data.data);\r\n        } else {\r\n          // console.log(\"Received non-200 response:\", response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching profile data:\", error);\r\n      }\r\n    };\r\n    fetchDetail();\r\n  }, []);\r\n\r\n  const toggleFilter = () => {\r\n    if (!isFilterActive) {\r\n      filterAssign(); // Apply the filter\r\n    }\r\n    setIsFilterActive(!isFilterActive); // Toggle the active state of the filter\r\n  };\r\n  const clearDateFilter = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setSearchTerm(\"\");\r\n    setIsFilterActive(false); // Ensure this is reset when filters are cleared\r\n  };\r\n  const clearFilter = () => {\r\n    fetchData(); // Fetch initial data to reset filters\r\n    setIsFilterActive(false); // Reset the filter active state\r\n  };\r\n  const [activeIcon, setActiveIcon] = useState(null);\r\n  // const [sortDirection, setSortDirection] = useState(\"asc\");\r\n\r\n  const handleIconClick = (iconName) => {\r\n    setActiveIcon(activeIcon === iconName ? null : iconName);\r\n  };\r\n\r\n  const toggleSortDirection = () => {\r\n    setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\r\n    handleIconClick(\"sort\");\r\n  };\r\n\r\n  const iconStyle = (iconName) => ({\r\n    fontSize: \"15px\",\r\n    color: activeIcon === iconName ? \"white\" : \"#AEAEAE\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: activeIcon === iconName ? \"#E2545E\" : \"transparent\",\r\n    padding: \"11px\",\r\n    borderRadius: \"5px\",\r\n    border: \"1px solid #DFE2EB\",\r\n    marginLeft: \"8px\",\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"flex text-gray-900\">\r\n        <Sidebar />\r\n        <div\r\n          className=\"container \"\r\n          style={{\r\n            borderRadius: \"20px\",\r\n            background: \"#F9F9F9\",\r\n            marginTop: \"2%\",\r\n          }}\r\n        >\r\n          <div className=\"row  mt-5\">\r\n            <div className=\"col-md-4\">\r\n              <div className=\"\">\r\n                <div\r\n                  className=\"col-md-12 w-full p-4   border-gray-200 rounded-lg  sm:p-6  dark:border-gray-700\"\r\n                  style={{ maxHeight: \"90vh\", overflowY: \"auto\" }}\r\n                >\r\n                  <div className=\" d-flex\">\r\n                    <h1 className=\"text-3xl font-bold \">Inbox</h1>\r\n\r\n                    {isGoogle ? (\r\n                      <select\r\n                        id=\"countries\"\r\n                        className=\"bg-gray-50   rounded-lg focus:ring-blue-500 focus:border-blue-500 block  p-2  dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                        style={{\r\n                          borderRadius: \"50px\",\r\n                          marginLeft: \"3%\",\r\n                          width: \"50%\",\r\n                          background: \"#F0F0F0\",\r\n                          color: \"#C2C2C2\",\r\n                        }}\r\n                      >\r\n                        <option selected>{isGoogle.contact}</option>\r\n                      </select>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                    {isDateFilterActive ? (\r\n                      <button\r\n                        className=\"btn flex-1 py-2\"\r\n                        style={{\r\n                          background: \"#E2545E\",\r\n                          color: \"white\",\r\n                          marginLeft: \"1rem\",\r\n                        }}\r\n                        onClick={clearDateFilter}\r\n                      >\r\n                        Clear\r\n                      </button>\r\n                    ) : (\r\n                      <p></p>\r\n                    )}\r\n\r\n                    {assignSuccess ? (\r\n                      <button\r\n                        className=\"btn flex-1 py-2\"\r\n                        style={{\r\n                          background: \"#E2545E\",\r\n                          color: \"white\",\r\n                          marginLeft: \"1rem\",\r\n                        }}\r\n                        onClick={clearFilter}\r\n                      >\r\n                        Clear\r\n                      </button>\r\n                    ) : (\r\n                      <p></p>\r\n                    )}\r\n                  </div>\r\n                  {userNotFound ? (\r\n                    <div>\r\n                      <p style={{ padding: \"25%\" }}>\r\n                        <img src=\"/media/empty.png\" alt=\"\" />\r\n                      </p>\r\n                      <button\r\n                        onClick={loginWithGoogle}\r\n                        className=\"btn flex-1 py-2\"\r\n                        style={{\r\n                          background: \"#E2545E\",\r\n                          color: \"white\",\r\n                          alignItems: \"center\",\r\n                          // marginTop: \"10%\",\r\n                          marginLeft: \"25%\",\r\n                        }}\r\n                      >\r\n                        Connect With Gmail\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <div\r\n                        className=\"pt-5 d-flex\"\r\n                        style={{ width: \"100%\", position: \"static\" }}\r\n                      >\r\n                        <div style={{ flex: \"1\" }}>\r\n                          {mails.length === 0 ? (\r\n                            <Select\r\n                              styles={customStyles}\r\n                              placeholder=\"All Users\"\r\n                              isClearable={true}\r\n                              style={{ color: \"white\" }}\r\n                            />\r\n                          ) : (\r\n                            <Select\r\n                              styles={customStyles}\r\n                              options={options1}\r\n                              placeholder=\"All Users\"\r\n                              onChange={handleMemberChange}\r\n                              isClearable={true}\r\n                              style={{ color: \"white\" }}\r\n                              isSearchable={true}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                        <div\r\n                          className=\"icons flex ml-5\"\r\n                          style={{ flex: \"0 0 auto\" }}\r\n                        >\r\n                          <div onClick={() => handleIconClick(\"calendar\")}>\r\n                            <i\r\n                              className=\"fa-light fa-calendar-range\"\r\n                              style={iconStyle(\"calendar\")}\r\n                              title=\"Calendar\"\r\n                              onClick={toggleInputs}\r\n                            ></i>\r\n                          </div>\r\n                          <div onClick={() => handleIconClick(\"search\")}>\r\n                            <i\r\n                              className=\"fa-light fa-magnifying-glass\"\r\n                              style={iconStyle(\"search\")}\r\n                              title=\"Search\"\r\n                              onClick={toggleSearchInput}\r\n                            ></i>\r\n                          </div>\r\n                          <div onClick={toggleSortDirection}>\r\n                            <i\r\n                              className={`fa-sharp fa-light ${\r\n                                sortDirection === \"asc\"\r\n                                  ? \"fa-arrow-up-arrow-down\"\r\n                                  : \"fa-arrow-down-arrow-up\"\r\n                              }`}\r\n                              style={iconStyle(\"sort\")}\r\n                              title={`Sort ${\r\n                                sortDirection === \"asc\"\r\n                                  ? \"Ascending\"\r\n                                  : \"Descending\"\r\n                              }`}\r\n                              onClick={toggleSort}\r\n                            ></i>\r\n                          </div>\r\n                          <div\r\n                            className=\"icon-wrapper rounded p-3 border border-gray-300 ml-2\"\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              color: isFilterActive ? \"white\" : \"#AEAEAE\",\r\n                              backgroundColor: isFilterActive\r\n                                ? \"#E2545E\"\r\n                                : \"transparent\",\r\n                            }}\r\n                            onClick={toggleFilter}\r\n                          >\r\n                            <i\r\n                              className=\"fa-light fa-circle-check\"\r\n                              style={{ fontSize: \"15px\" }}\r\n                            ></i>\r\n                          </div>\r\n                          <div\r\n                            className=\"icon-wrapper rounded p-3 border border-gray-300 ml-2\"\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            title=\"Login With Google\"\r\n                            onClick={loginWithGoogle}\r\n                          >\r\n                            <i\r\n                              className=\"fa-light fa-arrows-rotate\"\r\n                              style={{ fontSize: \"15px\", color: \"#AEAEAE\" }}\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"flex justify-center items-center space-x-4\">\r\n                        {showInputs && ( // This line checks if showInputs is true\r\n                          <>\r\n                            <div\r\n                              className=\"pt-5 d-flex\"\r\n                              style={{ width: \"100%\" }}\r\n                            >\r\n                              <div className=\"flex\" style={{ flex: \"1\" }}>\r\n                                <div\r\n                                  className=\"p-2 flex \"\r\n                                  style={{ flex: \"1\" }}\r\n                                >\r\n                                  <input\r\n                                    type=\"date\"\r\n                                    value={\r\n                                      startDate\r\n                                        ? startDate\r\n                                            .toISOString()\r\n                                            .substring(0, 10)\r\n                                        : \"\"\r\n                                    }\r\n                                    onChange={(e) =>\r\n                                      setStartDate(\r\n                                        e.target.value\r\n                                          ? new Date(e.target.value)\r\n                                          : null\r\n                                      )\r\n                                    }\r\n                                    placeholder=\"Select start date\"\r\n                                    style={{\r\n                                      padding: \"5%\",\r\n                                      width: \"100%\",\r\n                                      borderRadius: \"30px\",\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                                <div className=\"p-2 flex\" style={{ flex: \"1\" }}>\r\n                                  <input\r\n                                    type=\"date\"\r\n                                    value={\r\n                                      endDate\r\n                                        ? endDate.toISOString().substring(0, 10)\r\n                                        : \"\"\r\n                                    }\r\n                                    onChange={(e) =>\r\n                                      setEndDate(\r\n                                        e.target.value\r\n                                          ? new Date(e.target.value)\r\n                                          : null\r\n                                      )\r\n                                    }\r\n                                    placeholder=\"Select end date\"\r\n                                    style={{\r\n                                      padding: \"5% \",\r\n                                      width: \"100%\",\r\n                                      borderRadius: \"30px\",\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </>\r\n                        )}\r\n                        {showSearch && (\r\n                          <input\r\n                            type=\"text\"\r\n                            value={searchTerm}\r\n                            onChange={(e) => setSearchTerm(e.target.value)}\r\n                            placeholder=\"Search mails\"\r\n                            className=\"search-input-class\" // Add your CSS class for styling\r\n                            style={{\r\n                              width: \"100%\",\r\n                              padding: \"2%\",\r\n                              marginTop: \"2%\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      {filteredMails.length === 0 && !userNotFound ? (\r\n                        <div style={{ padding: \"25%\" }}>\r\n                          <img\r\n                            src=\"/media/no_result_found.png\"\r\n                            alt=\"No results found\"\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        mails &&\r\n                        filteredMails.map((mail, index) => (\r\n                          <div key={mail.detail.headers[\"Message-ID\"]}>\r\n                            <ul\r\n                              className=\"my-5 space-y-3 shadow\"\r\n                              style={{ borderRadius: \"50px\" }}\r\n                            >\r\n                              <li\r\n                                className={`rounded-lg ${\r\n                                  selectedMailId ===\r\n                                  mail.detail.headers[\"Message-ID\"]\r\n                                    ? \"selected-outline\"\r\n                                    : \"\"\r\n                                }`}\r\n                              >\r\n                                <Link\r\n                                  to={`/user/dashboard/${mail.detail.headers[\"Message-ID\"]}`}\r\n                                  className={`flex items-center p-3 bg-white text-base font-bold text-gray-900 rounded-lg hover:bg-gray-100 group hover:shadow dark:hover:bg-gray-100 dark:text-white`}\r\n                                  onClick={() =>\r\n                                    handleToggleDetails(\r\n                                      mail.detail.headers[\"Message-ID\"]\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  <img\r\n                                    src=\"/media/avatars/300-1.jpg\"\r\n                                    alt=\"\"\r\n                                    className=\"w-12 h-12 rounded-full\"\r\n                                    style={{\r\n                                      width: \"50px\",\r\n                                      height: \"50px\",\r\n                                      borderRadius: \"10px\",\r\n                                    }}\r\n                                  />\r\n                                  <div className=\"flex flex-col flex-grow ms-3\">\r\n                                    <div className=\"flex\">\r\n                                      <span className=\"whitespace-nowrap\">\r\n                                        {\r\n                                          mail.detail.headers.From.split(\r\n                                            \" <\"\r\n                                          )[0]\r\n                                        }{\" \"}\r\n                                      </span>\r\n                                      {assignSuccess ? (\r\n                                        <i\r\n                                          className=\"fa-light fa-circle-check\"\r\n                                          style={{\r\n                                            fontSize: \"15px\",\r\n                                            color: \"green\",\r\n                                            cursor: \"pointer\",\r\n                                            marginLeft: \"3%\",\r\n                                            marginTop: \"0%\",\r\n                                          }}\r\n                                        ></i>\r\n                                      ) : (\r\n                                        \"\"\r\n                                      )}\r\n                                    </div>\r\n                                    <small\r\n                                      className=\"text-xs\"\r\n                                      style={{ color: \"#C2C2C2\" }}\r\n                                    >\r\n                                      {mail.detail?.headers?.Date\r\n                                        ? mail.detail.headers.Date\r\n                                        : \"\"}\r\n                                    </small>\r\n\r\n                                    <p\r\n                                      className=\"text-xs\"\r\n                                      style={{\r\n                                        color: \"#C2C2C2\",\r\n                                        width: \"100%\",\r\n                                      }}\r\n                                    >\r\n                                      {mail.detail.headers.Subject}\r\n                                      {/* {mail.snippet\r\n                        .split(\" \")\r\n                        .slice(0, 7)\r\n                        .join(\" \")} */}\r\n                                    </p>\r\n                                  </div>\r\n                                  <i className=\"fa-solid fa-caret-down ml-auto text-gray-500\"></i>\r\n                                </Link>\r\n                                {expandedMailId ===\r\n                                  mail.detail.headers[\"Message-ID\"] && (\r\n                                  <div className=\"bg-white p-3 rounded-lg \">\r\n                                    {/* Additional details to show when expanded */}\r\n                                    {/* <p className=\"text-xs\">\r\n                                  {\"From:- \"}\r\n                                  {mail.detail.headers.From}\r\n                                </p> */}\r\n                                    <p className=\"text-xs\">\r\n                                      {\"Message:- \"}\r\n                                      {mail.detail.snippet}\r\n                                    </p>\r\n                                    <p className=\"text-xs\">\r\n                                      {\"Received:- \"}\r\n                                      {mail.detail.headers.Date}\r\n                                    </p>\r\n                                    {/* Add more details as needed */}\r\n                                  </div>\r\n                                )}\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        ))\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div\r\n                className=\"card bg-white p-4 border border-gray-200 rounded-lg shadow sm:p-6\"\r\n                style={{ maxHeight: \"90vh\", overflowY: \"auto\" }}\r\n              >\r\n                <div className=\"sub-card bg-gray-100 mt-2 p-4 border border-gray-200 rounded-lg\">\r\n                  <h1 className=\"text-xl\" style={{ color: \"#666666\" }}>\r\n                    Assign Email\r\n                  </h1>\r\n                  {userNotFound ? (\r\n                    <Select\r\n                      style={{ background: \"#D9D9D9B2\", color: \"#ADADAD\" }}\r\n                      className=\"basic-single mt-3\"\r\n                      classNamePrefix=\"select\"\r\n                      styles={customStyles1}\r\n                      placeholder=\"Select a team member\"\r\n                    />\r\n                  ) : (\r\n                    <Select\r\n                      style={{ background: \"#D9D9D9B2\", color: \"#ADADAD\" }}\r\n                      className=\"basic-single mt-3\"\r\n                      classNamePrefix=\"select\"\r\n                      defaultValue={options[0]}\r\n                      isClearable={true}\r\n                      isSearchable={true}\r\n                      styles={customStyles1}\r\n                      name=\"teamSelect\"\r\n                      options={options} // Your options array here\r\n                      onChange={handleAssignChange}\r\n                      placeholder=\"Select a team member\"\r\n                    />\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"sub-card bg-gray-100 mt-2 p-4 border border-gray-200 rounded-lg \">\r\n                  <h1 className=\"text-xl\" style={{ color: \"#666666\" }}>\r\n                    Responder Email\r\n                  </h1>\r\n                  <div className=\"d-flex mt-2\">\r\n                    {isGoogle ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        // placeholder=\"M Zubair Khan\"\r\n                        disabled\r\n                        value={isGoogle.contact}\r\n                        style={{ background: \"#D9D9D9B2\" }}\r\n                      />\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"sub-card bg-gray-100 mt-2 p-4 border border-gray-200 rounded-lg \">\r\n                  <h1 className=\"text-xl\" style={{ color: \"#666666\" }}>\r\n                    Choose Template\r\n                  </h1>\r\n                  <select\r\n                    className=\"form-select mt-3 block w-full p-2.5 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\r\n                    defaultValue=\"\"\r\n                    onChange={handleTemplateChange}\r\n                    value={selectedTemplateId || \"\"}\r\n                    style={{ background: \"#D9D9D9B2\", color: \"#ADADAD\" }}\r\n                  >\r\n                    <option value=\"Select Template\">Select Template</option>\r\n                    {templates.map((template) => (\r\n                      <option key={template.id} value={template.id}>\r\n                        {template.template_name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div className=\"sub-card bg-gray-100 mt-2 p-4 border border-gray-200 rounded-lg\">\r\n      <h1 className=\"text-xl\" style={{ color: \"#666666\" }}>Store Location</h1>\r\n      <Slider {...sliderSettings}>\r\n        {locations.map(location => (\r\n          <div key={location} className=\"p-2\">\r\n            <button\r\n              className=\"flex-1 border-primary rounded-lg py-2 w-full\"\r\n              style={locationId === location ? {\r\n                  background: \"#E2545E\",\r\n                  color: \"white\",\r\n                  padding: \"2% 5%\"\r\n                } : {\r\n                  background: \"#D9D9D9B2\",\r\n                  color: \"#C8C6C6\",\r\n                  padding: \"2% 5%\"\r\n                }}\r\n              onClick={() => handleLocationButton(location)}\r\n            >\r\n              {location}\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n    </div>\r\n                {/* <>\r\n                  <LocationSlider />\r\n                </> */}\r\n                {/* <div className=\"sub-card bg-gray-100 mt-2 p-4 border border-gray-200 rounded-lg\">\r\n                  <h1 className=\"text-xl\" style={{ color: \"#666666\" }}>\r\n                    Store Location\r\n                  </h1>\r\n                  <div className=\"flex flex-wrap gap-5 pt-2\">\r\n                    <button\r\n                      className=\"flex-1 border-primary rounded-lg py-2\"\r\n                      style={\r\n                        locationId === \"New York\"\r\n                          ? {\r\n                              background: \"#E2545E\",\r\n                              color: \"white\",\r\n                              padding: \"2% 5%\",\r\n                              width: \"100%\",\r\n                            }\r\n                          : {\r\n                              background: \"#D9D9D9B2\",\r\n                              color: \"#C8C6C6\",\r\n                              padding: \"2% 5%\",\r\n                              width: \"100%\",\r\n                            }\r\n                      }\r\n                      onClick={() => handleLocationButton(\"New York\")}\r\n                    >\r\n                      New York\r\n                    </button>\r\n                    <button\r\n                      className=\"flex-1 border-primary rounded-lg py-2\"\r\n                      style={\r\n                        locationId === \"Los Angeles\"\r\n                          ? {\r\n                              background: \"#E2545E\",\r\n                              color: \"white\",\r\n                              padding: \"2% 5%\",\r\n                              width: \"100%\",\r\n                            }\r\n                          : {\r\n                              background: \"#D9D9D9B2\",\r\n                              color: \"#C8C6C6\",\r\n                              padding: \"2% 5%\",\r\n                              width: \"100%\",\r\n                            }\r\n                      }\r\n                      onClick={() => handleLocationButton(\"Los Angeles\")}\r\n                    >\r\n                      Los Angeles\r\n                    </button>\r\n                    <button\r\n                      className=\"flex-1 border-primary rounded-lg py-2\"\r\n                      style={\r\n                        locationId === \"Chicago\"\r\n                          ? {\r\n                              background: \"#E2545E\",\r\n                              color: \"white\",\r\n                              padding: \"2% 5%\",\r\n                              width: \"100%\",\r\n                            }\r\n                          : {\r\n                              background: \"#D9D9D9B2\",\r\n                              color: \"#C8C6C6\",\r\n                              padding: \"2% 5%\",\r\n                              width: \"100%\",\r\n                            }\r\n                      }\r\n                      onClick={() => handleLocationButton(\"Chicago\")}\r\n                    >\r\n                      Chicago\r\n                    </button>\r\n                  </div>\r\n                </div> */}\r\n                <div className=\"sub-card bg-gray-100 mt-2 p-4 border border-gray-200 rounded-lg\">\r\n                  <h1 className=\"text-xl\" style={{ color: \"#666666\" }}>\r\n                    Collections\r\n                  </h1>\r\n                  <select\r\n                    className=\"form-select mt-3 block w-full p-2.5 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\r\n                    value={selectedCollectionId}\r\n                    onChange={handleSelectionChange}\r\n                    style={{ background: \"#D9D9D9B2\", color: \"#ADADAD\" }}\r\n                  >\r\n                    <option value=\"\">Select a collection</option>\r\n                    {collections.map((collection) => (\r\n                      <option key={collection.id} value={collection.id}>\r\n                        {collection.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {selectedCollectionId && filteredProducts.length > 0 && (\r\n                  <div className=\"sub-card bg-gray-100 mt-2 p-4 border border-gray-200 rounded-lg\">\r\n                    <h1 className=\"text-xl\" style={{ color: \"#666666\" }}>\r\n                      Model Number\r\n                    </h1>\r\n                    <select\r\n                      className=\"form-select mt-3 block w-full p-2.5 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\r\n                      value={selectedProductId}\r\n                      onChange={handleProductChange}\r\n                      style={{ background: \"#D9D9D9B2\", color: \"#ADADAD\" }}\r\n                    >\r\n                      <option value=\"\">Select a model</option>\r\n                      {filteredProducts.map((product) => (\r\n                        <option key={product.id} value={product.id}>\r\n                          {product.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-4\">\r\n              <div\r\n                className=\"card\"\r\n                style={{ maxHeight: \"90vh\", overflowY: \"auto\" }}\r\n              >\r\n                {selectedTemplate ? (\r\n                  <div className=\"col-md-12 w-full p-2 bg-white border-gray-200 rounded-lg sm:p-6 dark:bg-gray-800 dark:border-gray-700\">\r\n                    <div className=\"card shadow-none\">\r\n                      <div className=\"p-3\">\r\n                        <p\r\n                          className=\"small text-dark\"\r\n                          style={{ whiteSpace: \"pre-wrap\" }}\r\n                        >\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: finalTemplate,\r\n                            }}\r\n                          />\r\n                          {/* {selectedTemplate.greetings} <br />\r\n                          {selectedTemplate.heading} <br />\r\n                          {selectedTemplate.links} <br />\r\n                          {selectedProduct ? (\r\n                            <img\r\n                              src={`${Helpers.basePath}/assets/${selectedProduct.image}`}\r\n                              alt={selectedProduct.name}\r\n                              style={{\r\n                                maxWidth: \"100%\",\r\n                                height: \"250px\",\r\n                                alignItems: \"center\",\r\n                              }}\r\n                            />\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          <br />\r\n                          {selectedTemplate.footer} <br />\r\n                          {locationId} <br />\r\n                          {selectedProduct ? selectedProduct.name : \"\"} <br />\r\n                          {selectedProduct ? selectedProduct.price : \"\"} <br />\r\n                          {selectedProduct ? profile.name : \"\"} <br />\r\n                          {selectedProduct ? profile.address : \"\"} <br />\r\n                          {selectedProduct ? profile.phone : \"\"} */}\r\n                        </p>\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-end\",\r\n                          marginBottom: \"3%\",\r\n                          marginRight: \"3%\",\r\n                        }}\r\n                      >\r\n                        <form onSubmit={handleEmailSend}>\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn flex-1 py-2\"\r\n                            style={{\r\n                              background: \"#E2545E\",\r\n                              color: \"white\",\r\n                              marginLeft: \"1rem\",\r\n                            }}\r\n                            disabled={sendisLoading}\r\n                          >\r\n                            {sendisLoading ? \"Please Wait...\" : \"Send\"}\r\n                          </button>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div style={{ padding: \"30%\" }}>\r\n                    <img\r\n                      src=\"/media/result.png\"\r\n                      alt=\"No template selected\"\r\n                      style={{ width: \"100%\" }}\r\n                    />\r\n                    <p\r\n                      style={{\r\n                        alignItems: \"center\",\r\n                        textAlign: \"center\",\r\n                        paddingTop: \"8%\",\r\n                        paddingBottom: \"5%\",\r\n                      }}\r\n                    >\r\n                      Please Choose the template\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}